From 673d37a20c1c50a1cb4ee4892a4f93e22283c05c Mon Sep 17 00:00:00 2001
From: Cheng Jian <cj.chengjian@huawei.com>
Date: Sat, 29 May 2021 14:43:12 +0800
Subject: [PATCH] livepatch/core: Support function force patched/unpatched
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 673d37a20c1c50a1cb4ee4892a4f93e22283c05c


euler inclusion
category: feature
bugzilla: 51921
CVE: N/A

----------------------------------------

Some functions in the kernel are always on the stack of some
thread in the system. Attempts to patch these function will
currently always fail the activeness safety check.

However, through human inspection, it can be determined that,
for a particular function, consistency is maintained even if
the old and new versions of the function run concurrently.

commit 2e93c5e1e3dc ("support forced patching") in kpatch-build
introduces a KPATCH_FORCE_UNSAFE() macro to define patched
functions that such be exempted from the activeness safety
check. now kernel implement this feature.

Signed-off-by: Cheng Jian <cj.chengjian@huawei.com>
Reviewed-by: Li Bin <huawei.libin@huawei.com>
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Signed-off-by: Wang ShaoBo <bobo.shaobowang@huawei.com>

Signed-off-by: Dong Kai <dongkai11@huawei.com>

Signed-off-by: Ye Weihua <yeweihua4@huawei.com>
Reviewed-by: Yang Jihong <yangjihong1@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/arm/kernel/livepatch.c        | 2 ++
 arch/arm64/kernel/livepatch.c      | 2 ++
 arch/powerpc/kernel/livepatch_32.c | 2 ++
 arch/powerpc/kernel/livepatch_64.c | 2 ++
 arch/x86/kernel/livepatch.c        | 2 ++
 include/linux/livepatch.h          | 1 +
 6 files changed, 11 insertions(+)

diff --git a/arch/arm/kernel/livepatch.c b/arch/arm/kernel/livepatch.c
index a54d25d25075..6ec30741e9b3 100644
--- a/arch/arm/kernel/livepatch.c
+++ b/arch/arm/kernel/livepatch.c
@@ -99,6 +99,8 @@ static int klp_check_activeness_func(struct stackframe *frame, void *data)
 	for (obj = patch->objs; obj->funcs; obj++) {
 		for (func = obj->funcs; func->old_name; func++) {
 			if (args->enable) {
+				if (func->force)
+					continue;
 				/*
 				 * When enable, checking the currently
 				 * active functions.
diff --git a/arch/arm64/kernel/livepatch.c b/arch/arm64/kernel/livepatch.c
index 6733989d1357..e1681b94d2fd 100644
--- a/arch/arm64/kernel/livepatch.c
+++ b/arch/arm64/kernel/livepatch.c
@@ -104,6 +104,8 @@ static bool klp_check_activeness_func(void *data, unsigned long pc)
 	for (obj = patch->objs; obj->funcs; obj++) {
 		for (func = obj->funcs; func->old_name; func++) {
 			if (args->enable) {
+				if (func->force)
+					continue;
 				/*
 				 * When enable, checking the currently
 				 * active functions.
diff --git a/arch/powerpc/kernel/livepatch_32.c b/arch/powerpc/kernel/livepatch_32.c
index 197260e44789..df09451c934a 100644
--- a/arch/powerpc/kernel/livepatch_32.c
+++ b/arch/powerpc/kernel/livepatch_32.c
@@ -93,6 +93,8 @@ static int klp_check_activeness_func(struct stackframe *frame, void *data)
 	for (obj = patch->objs; obj->funcs; obj++) {
 		for (func = obj->funcs; func->old_name; func++) {
 			if (args->enable) {
+				if (func->force)
+					continue;
 				/*
 				 * When enable, checking the currently
 				 * active functions.
diff --git a/arch/powerpc/kernel/livepatch_64.c b/arch/powerpc/kernel/livepatch_64.c
index cb9f9035f315..d4fb7bc8eee8 100644
--- a/arch/powerpc/kernel/livepatch_64.c
+++ b/arch/powerpc/kernel/livepatch_64.c
@@ -132,6 +132,8 @@ static int klp_check_activeness_func(struct stackframe *frame, void *data)
 
 			/* Check func address in stack */
 			if (args->enable) {
+				if (func->force)
+					continue;
 				/*
 				 * When enable, checking the currently
 				 * active functions.
diff --git a/arch/x86/kernel/livepatch.c b/arch/x86/kernel/livepatch.c
index f38892868a46..5bcb726a1e76 100644
--- a/arch/x86/kernel/livepatch.c
+++ b/arch/x86/kernel/livepatch.c
@@ -90,6 +90,8 @@ static int klp_check_stack_func(struct klp_func *func,
 #endif
 
 		if (enable) {
+			if (func->force)
+				continue;
 			/*
 			 * When enable, checking the currently active
 			 * functions.
diff --git a/include/linux/livepatch.h b/include/linux/livepatch.h
index d4ce76f642b2..c602ef123f77 100644
--- a/include/linux/livepatch.h
+++ b/include/linux/livepatch.h
@@ -66,6 +66,7 @@ struct klp_func {
 	 * in kallsyms for the given object is used.
 	 */
 	unsigned long old_sympos;
+	int force;
 
 	/* internal */
 	void *old_func;
-- 
2.26.2

