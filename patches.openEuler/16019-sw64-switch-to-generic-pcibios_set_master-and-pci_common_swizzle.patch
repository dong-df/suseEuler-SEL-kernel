From 5a86f9a347b4d686d2b2383486ae947575e0352b Mon Sep 17 00:00:00 2001
From: Zhou Xuemei <zhouxuemei@wxiat.com>
Date: Tue, 7 Jun 2022 17:41:39 +0800
Subject: [PATCH] sw64: switch to generic pcibios_set_master and
 pci_common_swizzle
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 5a86f9a347b4d686d2b2383486ae947575e0352b
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56U83

--------------------------------

The generic implementation is better than arch-specific version. So
we remove the arch-specific one and switch to the generic version.

Signed-off-by: Zhou Xuemei <zhouxuemei@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/pci.c | 22 +---------------------
 1 file changed, 1 insertion(+), 21 deletions(-)

diff --git a/arch/sw_64/kernel/pci.c b/arch/sw_64/kernel/pci.c
index b8505ad8972c..2c53e0717c9a 100644
--- a/arch/sw_64/kernel/pci.c
+++ b/arch/sw_64/kernel/pci.c
@@ -175,21 +175,6 @@ struct pci_dev *sw64_gendev_to_pci(struct device *dev)
 	return NULL;
 }
 
-/*
- *  If we set up a device for bus mastering, we need to check the latency
- *  timer as certain firmware forgets to set it properly.
- */
-void pcibios_set_master(struct pci_dev *dev)
-{
-	u8 lat;
-
-	pci_read_config_byte(dev, PCI_LATENCY_TIMER, &lat);
-	if (lat >= 16)
-		return;
-	pr_info("PCI: Setting latency timer of device %s to 64\n", pci_name(dev));
-	pci_write_config_byte(dev, PCI_LATENCY_TIMER, 64);
-}
-
 void __init pcibios_claim_one_bus(struct pci_bus *b)
 {
 	struct pci_dev *dev;
@@ -265,7 +250,7 @@ void __init common_init_pci(void)
 		bridge->sysdata = hose;
 		bridge->busnr = hose->busn_space->start;
 		bridge->ops = &sw64_pci_ops;
-		bridge->swizzle_irq = sw64_swizzle;
+		bridge->swizzle_irq = pci_common_swizzle;
 		bridge->map_irq = sw64_map_irq;
 
 		ret = pci_scan_root_bus_bridge(bridge);
@@ -593,11 +578,6 @@ int sw64_map_irq(const struct pci_dev *dev, u8 slot, u8 pin)
 	return sw64_chip_init->pci_init.map_irq(dev, slot, pin);
 }
 
-unsigned char sw64_swizzle(struct pci_dev *dev, u8 *pinp)
-{
-	return PCI_SLOT(dev->devfn);
-}
-
 static void __init
 sw64_init_host(unsigned long node, unsigned long index)
 {
-- 
2.34.1

