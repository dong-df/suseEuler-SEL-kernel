From ad4f888029ddeeb0ce2c02c563d95441ecdfd6a2 Mon Sep 17 00:00:00 2001
From: GUO Zihua <guozihua@huawei.com>
Date: Tue, 19 Jul 2022 17:59:52 +0800
Subject: [PATCH] KEYS: Fix error path return value in pgp_generate_fingerprint
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: ad4f888029ddeeb0ce2c02c563d95441ecdfd6a2
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I5GRSV
CVE: NA

--------------------------------

In function pgp_generate_fingerprint, return value is not set correctly
shall kmalloc failed returning 0 while there is in fact a failure,
leading to the caller keep going and triggers a read out-of-bound. This
patch fixes this issue by setting correct return value on the error
path.

Signed-off-by: GUO Zihua <guozihua@huawei.com>
Reviewed-by: Roberto Sassu <roberto.sassu@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 crypto/asymmetric_keys/pgp_public_key.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/crypto/asymmetric_keys/pgp_public_key.c b/crypto/asymmetric_keys/pgp_public_key.c
index 27b9efeafc4f..33a089797e59 100644
--- a/crypto/asymmetric_keys/pgp_public_key.c
+++ b/crypto/asymmetric_keys/pgp_public_key.c
@@ -152,8 +152,10 @@ static int pgp_generate_fingerprint(struct pgp_key_data_parse_context *ctx,
 	digest_size = crypto_shash_digestsize(tfm);
 
 	raw_fingerprint = kmalloc(digest_size, GFP_KERNEL);
-	if (!raw_fingerprint)
+	if (!raw_fingerprint) {
+		ret = -ENOMEM;
 		goto cleanup_hash;
+	}
 
 	ret = crypto_shash_final(digest, raw_fingerprint);
 	if (ret < 0)
@@ -161,8 +163,10 @@ static int pgp_generate_fingerprint(struct pgp_key_data_parse_context *ctx,
 
 	ctx->fingerprint_len = digest_size * 2;
 	fingerprint = kmalloc(digest_size * 2 + 1, GFP_KERNEL);
-	if (!fingerprint)
+	if (!fingerprint) {
+		ret = -ENOMEM;
 		goto cleanup_raw_fingerprint;
+	}
 
 	offset = digest_size - 8;
 	pr_debug("offset %u/%u\n", offset, digest_size);
-- 
2.34.1

