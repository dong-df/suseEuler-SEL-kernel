From 7ccb1acb0dd47a8f9f3bdad138e2c0a1848b0741 Mon Sep 17 00:00:00 2001
From: He Sheng <hesheng@wxiat.com>
Date: Tue, 7 Jun 2022 17:42:22 +0800
Subject: [PATCH] sw64: ptrace: clean up debug codes
Patch-mainline: NO, OTHERS
References: openEuler-22.03-LTS
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56OLG

--------------------------------

These ugly and useless debug codes can be removed.

Signed-off-by: He Sheng <hesheng@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/ptrace.c | 27 ---------------------------
 1 file changed, 27 deletions(-)

diff --git a/arch/sw_64/kernel/ptrace.c b/arch/sw_64/kernel/ptrace.c
index fa944defca01..ede3c1053d81 100644
--- a/arch/sw_64/kernel/ptrace.c
+++ b/arch/sw_64/kernel/ptrace.c
@@ -28,26 +28,6 @@
 #define CREATE_TRACE_POINTS
 #include <trace/events/syscalls.h>
 
-#define DEBUG	DBG_MEM
-#undef DEBUG
-
-#define DEBUG  0
-
-#ifdef DEBUG
-enum {
-	DBG_MEM = (1 << 0),
-	DBG_BPT = (1 << 1),
-	DBG_MEM_ALL = (1 << 2)
-};
-#define DBG(fac, args)		\
-{				\
-	if ((fac) & DEBUG)	\
-		printk args;	\
-}
-#else
-#define DBG(fac, args)
-#endif
-
 #define BREAKINST	0x00000080 /* sys_call bpt */
 
 /*
@@ -244,15 +224,12 @@ ptrace_set_bpt(struct task_struct *child)
 		if (displ) /* guard against unoptimized code */
 			task_thread_info(child)->bpt_addr[nsaved++]
 				= pc + 4 + displ;
-		DBG(DBG_BPT, ("execing branch\n"));
 		/*call ret jmp*/
 	} else if (op_code >= 0x1 && op_code <= 0x3) {
 		reg_b = (insn >> 16) & 0x1f;
 		task_thread_info(child)->bpt_addr[nsaved++] = get_reg(child, reg_b);
-		DBG(DBG_BPT, ("execing jump\n"));
 	} else {
 		task_thread_info(child)->bpt_addr[nsaved++] = pc + 4;
-		DBG(DBG_BPT, ("execing normal insn\n"));
 	}
 
 	/* install breakpoints: */
@@ -262,8 +239,6 @@ ptrace_set_bpt(struct task_struct *child)
 		if (res < 0)
 			return res;
 		task_thread_info(child)->bpt_insn[i] = insn;
-		DBG(DBG_BPT, ("    -> next_pc=%lx\n",
-					task_thread_info(child)->bpt_addr[i]));
 		res = write_int(child, task_thread_info(child)->bpt_addr[i],
 				BREAKINST);
 		if (res < 0)
@@ -452,7 +427,6 @@ long arch_ptrace(struct task_struct *child, long request,
 	case PTRACE_PEEKUSR:
 		force_successful_syscall_return();
 		ret = get_reg(child, addr);
-		DBG(DBG_MEM, ("peek $%lu->%#lx\n", addr, ret));
 		break;
 
 	/* When I and D space are separate, this will have to be fixed.  */
@@ -462,7 +436,6 @@ long arch_ptrace(struct task_struct *child, long request,
 		break;
 
 	case PTRACE_POKEUSR: /* write the specified register */
-		DBG(DBG_MEM, ("poke $%lu<-%#lx\n", addr, data));
 		ret = put_reg(child, addr, data);
 		break;
 	case PTRACE_GETREGS:
-- 
2.34.1

