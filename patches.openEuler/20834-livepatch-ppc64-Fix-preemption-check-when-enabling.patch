From 744fb41393fac56762534c5d1034e7596fadf2f1 Mon Sep 17 00:00:00 2001
From: Zheng Yejian <zhengyejian1@huawei.com>
Date: Fri, 16 Dec 2022 16:58:47 +0800
Subject: [PATCH] livepatch/ppc64: Fix preemption check when enabling
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 744fb41393fac56762534c5d1034e7596fadf2f1
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I60N44
CVE: NA

--------------------------------

Misspelling of 'CONFIG_PREEMPTION' may cause old function not being
checked, which results in a running function being livepatched.

Fixes: 20106abf1e74 ("livepatch: Check whole stack when CONFIG_PREEMPT is set")
Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
Reviewed-by: Kuohai Xu <xukuohai@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/powerpc/kernel/livepatch_64.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/powerpc/kernel/livepatch_64.c b/arch/powerpc/kernel/livepatch_64.c
index 0098ad48f918..f18cba61a011 100644
--- a/arch/powerpc/kernel/livepatch_64.c
+++ b/arch/powerpc/kernel/livepatch_64.c
@@ -189,7 +189,7 @@ static int klp_check_activeness_func(struct klp_patch *patch, int enable,
 				 * excution of instructions to be repalced is
 				 * complete.
 				 */
-				if (IS_ENABLED(CONFIG_PREEMTION) ||
+				if (IS_ENABLED(CONFIG_PREEMPTION) ||
 				    (func->force == KLP_NORMAL_FORCE) ||
 				    check_jump_insn(func_addr)) {
 					ret = add_func_to_list(check_funcs, &pcheck,
-- 
2.33.0

