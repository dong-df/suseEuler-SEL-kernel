From a6356073d221489df85442348d3f482575fa402f Mon Sep 17 00:00:00 2001
From: Min Fanlei <minfanlei@wxiat.com>
Date: Tue, 7 Jun 2022 17:42:34 +0800
Subject: [PATCH] sw64: kvm: fix bad page state setting outside of kvm memory
 pool
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: a6356073d221489df85442348d3f482575fa402f
Modified-by-SEL: No


Sunway inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I56WV8

--------------------------------

The page flag of the first page after kvm memory pool is incorrectly
set to "reserved", which will result in page dumped if user try to
apply for it.

Now we exclude the page to fix it.

Signed-off-by: Min Fanlei <minfanlei@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/setup.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/sw_64/kernel/setup.c b/arch/sw_64/kernel/setup.c
index 67d01f8cfe22..ca19445ac883 100644
--- a/arch/sw_64/kernel/setup.c
+++ b/arch/sw_64/kernel/setup.c
@@ -1017,7 +1017,7 @@ static int __init sw64_kvm_pool_init(void)
 	gen_pool_set_algo(sw64_kvm_pool, gen_pool_best_fit, NULL);
 
 	base_page = pfn_to_page(kvm_mem_base >> PAGE_SHIFT);
-	end_page  = pfn_to_page((kvm_mem_base + kvm_mem_size) >> PAGE_SHIFT);
+	end_page  = pfn_to_page((kvm_mem_base + kvm_mem_size - 1) >> PAGE_SHIFT);
 
 	p = base_page;
 	while (page_ref_count(p) == 0 &&
-- 
2.34.1

