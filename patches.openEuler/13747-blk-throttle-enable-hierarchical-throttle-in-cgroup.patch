From f3ee0f6e4a8c7635edde1c5f9f35bd10887c9274 Mon Sep 17 00:00:00 2001
From: Yu Kuai <yukuai3@huawei.com>
Date: Thu, 20 Jan 2022 12:22:27 +0800
Subject: [PATCH] blk-throttle: enable hierarchical throttle in cgroup v1
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: f3ee0f6e4a8c7635edde1c5f9f35bd10887c9274


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4R7RE
CVE: NA

-----------------------------------------------

blkio subsytem is not under default hierarchy in cgroup v1 by default,
which means configurations will only be effective on current cgroup
for io throttle.

This patch introduces a new feature that enable default hierarchy for
io throttle, which means configurations will be effective on child cgroups.
Such feature is disabled by default, and can be enabled by adding
"blkcg_global_limit=1" or "blkcg_global_limit=Y" or "blkcg_global_limit=y"
in boot cmd.

Signed-off-by: Yu Kuai <yukuai3@huawei.com>
Reviewed-by: Tao Hou <houtao1@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 block/blk-throttle.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/block/blk-throttle.c b/block/blk-throttle.c
index 3db507f33243..942776a10599 100644
--- a/block/blk-throttle.c
+++ b/block/blk-throttle.c
@@ -43,6 +43,19 @@ static struct blkcg_policy blkcg_policy_throtl;
 /* A workqueue to queue throttle related work */
 static struct workqueue_struct *kthrotld_workqueue;
 
+/* True if global limit is enabled in cgroup v1 */
+static bool global_limit;
+
+static int __init setup_global_limit(char *str)
+{
+	if (!strcmp(str, "1") || !strcmp(str, "Y") || !strcmp(str, "y"))
+		global_limit = true;
+
+	return 1;
+}
+
+__setup("blkcg_global_limit=", setup_global_limit);
+
 /*
  * To implement hierarchical throttling, throtl_grps form a tree and bios
  * are dispatched upwards level by level until they reach the top and get
@@ -558,7 +571,8 @@ static void throtl_pd_init(struct blkg_policy_data *pd)
 	 * regardless of the position of the group in the hierarchy.
 	 */
 	sq->parent_sq = &td->service_queue;
-	if (cgroup_subsys_on_dfl(io_cgrp_subsys) && blkg->parent)
+	if ((cgroup_subsys_on_dfl(io_cgrp_subsys) || global_limit) &&
+	    blkg->parent)
 		sq->parent_sq = &blkg_to_tg(blkg->parent)->service_queue;
 	tg->td = td;
 }
-- 
2.26.2

