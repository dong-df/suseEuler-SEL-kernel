From da6731e7b83ca6388aee0c0aeb6d67805641ed70 Mon Sep 17 00:00:00 2001
From: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date: Fri, 3 Dec 2021 18:15:17 +0800
Subject: [PATCH] stop_machine: mask sdei before running the callback
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: da6731e7b83ca6388aee0c0aeb6d67805641ed70


hulk inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I4JBQ8

----------------------------------------

Kprobes use 'stop_machine' to modify code which could be ran in the
sdei_handler at the same time. This patch mask sdei before running the
stop_machine callback to avoid this race condition.

Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Reviewed-by: Yang Yingliang <yangyingliang@huawei.com>
Signed-off-by: Wei Li <liwei391@huawei.com>
Reviewed-by: Cheng Jian <cj.chengjian@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 kernel/stop_machine.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/kernel/stop_machine.c b/kernel/stop_machine.c
index 890b79cf0e7c..5c80fe3562b7 100644
--- a/kernel/stop_machine.c
+++ b/kernel/stop_machine.c
@@ -23,6 +23,10 @@
 #include <linux/nmi.h>
 #include <linux/sched/wake_q.h>
 
+#ifdef CONFIG_ARM64
+#include <linux/arm_sdei.h>
+#endif
+
 /*
  * Structure to determine completion condition and record errors.  May
  * be shared by works on different cpus.
@@ -218,6 +222,9 @@ static int multi_cpu_stop(void *data)
 			case MULTI_STOP_DISABLE_IRQ:
 				local_irq_disable();
 				hard_irq_disable();
+#ifdef CONFIG_ARM64
+				sdei_mask_local_cpu();
+#endif
 				break;
 			case MULTI_STOP_RUN:
 				if (is_active)
@@ -238,6 +245,9 @@ static int multi_cpu_stop(void *data)
 		rcu_momentary_dyntick_idle();
 	} while (curstate != MULTI_STOP_EXIT);
 
+#ifdef CONFIG_ARM64
+	sdei_unmask_local_cpu();
+#endif
 	local_irq_restore(flags);
 	return err;
 }
-- 
2.26.2

