From cd84ca9ffd4e490a4893a4039a2173d9a7019f73 Mon Sep 17 00:00:00 2001
From: Wang Yufen <wangyufen@huawei.com>
Date: Sat, 22 Jan 2022 17:58:14 +0800
Subject: [PATCH] tcp_comp: Avoiding the null pointer problem of ctx in
 comp_stream_read
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: cd84ca9ffd4e490a4893a4039a2173d9a7019f73
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I45UYC?from=project-issue
CVE: NA

-------------------------------------------------

In comp_stream_read ctx might be null, add null check to avoid oops. And delete
unnecessary tcp_comp_err_abort.

Signed-off-by: Wang Yufen <wangyufen@huawei.com>
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Signed-off-by: Lu Wei <luwei32@huawei.com>
Reviewed-by: Wei Yongjun <weiyongjun1@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 net/ipv4/tcp_comp.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/net/ipv4/tcp_comp.c b/net/ipv4/tcp_comp.c
index 1daa6d7ad5e1..6d6b248d02b5 100644
--- a/net/ipv4/tcp_comp.c
+++ b/net/ipv4/tcp_comp.c
@@ -699,8 +699,6 @@ static int tcp_comp_recvmsg(struct sock *sk, struct msghdr *msg, size_t len,
 		if (!ctx->rx.decompressed) {
 			err = tcp_comp_decompress(sk, skb);
 			if (err < 0) {
-				if (err != -ENOSPC)
-					tcp_comp_err_abort(sk, EBADMSG);
 				goto recv_end;
 			}
 			ctx->rx.decompressed = true;
@@ -734,6 +732,9 @@ bool comp_stream_read(const struct sock *sk)
 {
 	struct tcp_comp_context *ctx = comp_get_ctx(sk);
 
+	if (!ctx)
+		return false;
+
 	if (ctx->rx.pkt)
 		return true;
 
-- 
2.26.2

