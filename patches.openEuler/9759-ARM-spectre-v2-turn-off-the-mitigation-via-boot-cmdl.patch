From e90765b065f29e6f4d8c9404107b70d69f07df43 Mon Sep 17 00:00:00 2001
From: "GONG, Ruiqi" <gongruiqi1@huawei.com>
Date: Tue, 19 Oct 2021 18:04:44 +0800
Subject: [PATCH] ARM: spectre-v2: turn off the mitigation via boot cmdline
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: e90765b065f29e6f4d8c9404107b70d69f07df43

 param

hulk inclusion
category: feature
feature: switch of spectre mitigation
bugzilla: 180851 https://gitee.com/openeuler/kernel/issues/I4EF1O

-------------------------------------------------

We enable spectre mitigation by default for ARM32, which may
cause performance regression. To offer an option to turn off
this feature, implement a cmdline parameter 'nospectre_v2' compatible
with mainline, which sets up a switch to skip invalidating BTB/icache
for A9/A15 in context switching and user abort.

Signed-off-by: GONG, Ruiqi <gongruiqi1@huawei.com>
Cc: Hanjun Guo <guohanjun@huawei.com>
Reviewed-by: Hanjun Guo <guohanjun@huawei.com>
Reviewed-by: Xiu Jianfeng <xiujianfeng@huawei.com>
Signed-off-by: Chen Jun <chenjun102@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/arm/include/asm/system_misc.h |  1 +
 arch/arm/mm/proc-v7-bugs.c         | 18 ++++++++++++++++++
 arch/arm/mm/proc-v7.S              | 15 +++++++++++++++
 3 files changed, 34 insertions(+)

diff --git a/arch/arm/include/asm/system_misc.h b/arch/arm/include/asm/system_misc.h
index 66f6a3ae68d2..a7ac0c9f38e5 100644
--- a/arch/arm/include/asm/system_misc.h
+++ b/arch/arm/include/asm/system_misc.h
@@ -37,6 +37,7 @@ static inline void harden_branch_predictor(void)
 #define UDBG_BUS	(1 << 4)
 
 extern unsigned int user_debug;
+extern int nospectre_v2;
 
 #endif /* !__ASSEMBLY__ */
 
diff --git a/arch/arm/mm/proc-v7-bugs.c b/arch/arm/mm/proc-v7-bugs.c
index 114c05ab4dd9..d7750cddc334 100644
--- a/arch/arm/mm/proc-v7-bugs.c
+++ b/arch/arm/mm/proc-v7-bugs.c
@@ -8,6 +8,19 @@
 #include <asm/proc-fns.h>
 #include <asm/system_misc.h>
 
+/*
+ * 32-bit ARM spectre hardening, enabled by default, can be disabled via boot
+ * cmdline param 'nospectre_v2' to avoid performance regression.
+ */
+int nospectre_v2 __read_mostly;
+
+static int __init nospectre_v2_setup(char *str)
+{
+	nospectre_v2 = 1;
+	return 0;
+}
+early_param("nospectre_v2", nospectre_v2_setup);
+
 #ifdef CONFIG_HARDEN_BRANCH_PREDICTOR
 DEFINE_PER_CPU(harden_branch_predictor_fn_t, harden_branch_predictor_fn);
 
@@ -41,6 +54,11 @@ static void cpu_v7_spectre_init(void)
 	const char *spectre_v2_method = NULL;
 	int cpu = smp_processor_id();
 
+	if (nospectre_v2) {
+		pr_info_once("Spectre v2: hardening is disabled\n");
+		return;
+	}
+
 	if (per_cpu(harden_branch_predictor_fn, cpu))
 		return;
 
diff --git a/arch/arm/mm/proc-v7.S b/arch/arm/mm/proc-v7.S
index 28c9d32fa99a..a59ddfd7a179 100644
--- a/arch/arm/mm/proc-v7.S
+++ b/arch/arm/mm/proc-v7.S
@@ -111,17 +111,32 @@ ENTRY(cpu_v7_hvc_switch_mm)
 	b	cpu_v7_switch_mm
 ENDPROC(cpu_v7_hvc_switch_mm)
 #endif
+
+.globl nospectre_v2
 ENTRY(cpu_v7_iciallu_switch_mm)
+	adr r3, 3f
+	ldr r3, [r3]
+	cmp r3, #1
+	beq 1f
 	mov	r3, #0
 	mcr	p15, 0, r3, c7, c5, 0		@ ICIALLU
+1:
 	b	cpu_v7_switch_mm
 ENDPROC(cpu_v7_iciallu_switch_mm)
 ENTRY(cpu_v7_bpiall_switch_mm)
+	adr r3, 3f
+	ldr r3, [r3]
+	cmp r3, #1
+	beq 1f
 	mov	r3, #0
 	mcr	p15, 0, r3, c7, c5, 6		@ flush BTAC/BTB
+1:
 	b	cpu_v7_switch_mm
 ENDPROC(cpu_v7_bpiall_switch_mm)
 
+	.align
+3:	.long nospectre_v2
+
 	string	cpu_v7_name, "ARMv7 Processor"
 	.align
 
-- 
2.26.2

