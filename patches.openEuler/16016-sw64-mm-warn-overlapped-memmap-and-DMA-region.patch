From 20aa7395bcd028a2cd1f010dd60faddc681606af Mon Sep 17 00:00:00 2001
From: Mao Minkai <maominkai@wxiat.com>
Date: Tue, 7 Jun 2022 17:41:36 +0800
Subject: [PATCH] sw64: mm: warn overlapped memmap and DMA region
Patch-mainline: NO, OTHERS
References: openEuler-22.03-LTS
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56TYY

--------------------------------

If memmap region and DMA region are overlapped, DMA region could be
discontiguous. Send a warning to kernel log if this happens.

Signed-off-by: Mao Minkai <maominkai@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/setup.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/arch/sw_64/kernel/setup.c b/arch/sw_64/kernel/setup.c
index cc33a6f3b4f9..86cae2962e97 100644
--- a/arch/sw_64/kernel/setup.c
+++ b/arch/sw_64/kernel/setup.c
@@ -367,6 +367,7 @@ void __init process_memmap(void)
 	static int i;	// Make it static so we won't start over again every time.
 	int ret;
 	phys_addr_t base, size;
+	unsigned long dma_end __maybe_unused = virt_to_phys((void *)MAX_DMA_ADDRESS);
 
 	if (!memblock_initialized)
 		return;
@@ -386,6 +387,9 @@ void __init process_memmap(void)
 				if (ret)
 					pr_err("reserve memmap region [mem %#018llx-%#018llx] failed\n",
 							base, base + size - 1);
+				else if (IS_ENABLED(CONFIG_ZONE_DMA32) && (base < dma_end))
+					pr_warn("memmap region [mem %#018llx-%#018llx] overlapped with DMA32 region\n",
+							base, base + size - 1);
 			}
 			break;
 		case memmap_pci:
-- 
2.34.1

