From cc5464fb0762aa47c411a3f779d2ce32c48b66d7 Mon Sep 17 00:00:00 2001
From: Ding Tianhong <dingtianhong@huawei.com>
Date: Thu, 7 Apr 2022 16:12:36 +0800
Subject: [PATCH] share_pool: don't trace the invalid spa address
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: cc5464fb0762aa47c411a3f779d2ce32c48b66d7
Modified-by-SEL: No


ascend inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I4M23J
CVE: NA

-------------------------------------------------

Don't use the spa's va_start if the spa is not valid.

Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
Reviewed-by: Weilong Chen <chenweilong@huawei.com>
Reviewed-by: Hanjun Guo <guohanjun@huawei.com>
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Reviewed-by: Weilong Chen <chenweilong@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 mm/share_pool.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/mm/share_pool.c b/mm/share_pool.c
index b209e216b33a..3a37418378f6 100644
--- a/mm/share_pool.c
+++ b/mm/share_pool.c
@@ -2508,13 +2508,14 @@ static void sp_alloc_finish(int result, struct sp_area *spa,
 		sp_update_process_stat(current, true, spa);
 
 	/* this will free spa if mmap failed */
-	if (spa && !IS_ERR(spa))
+	if (spa && !IS_ERR(spa)) {
 		__sp_area_drop(spa);
+		trace_sp_alloc_finish(ac, spa->va_start);
+	}
 
 	if (!is_pass_through)
 		sp_group_drop(spg);
 
-	trace_sp_alloc_finish(ac, spa->va_start);
 	sp_dump_stack();
 	sp_try_to_compact();
 }
-- 
2.26.2

