From 3a32dc149e694c61bf1a276de995e75256b20b05 Mon Sep 17 00:00:00 2001
From: Liu Shixin <liushixin2@huawei.com>
Date: Sun, 20 Mar 2022 10:48:14 +0800
Subject: [PATCH] mm/dynamic_hugetlb: check free_pages_prepares when split
 pages
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 3a32dc149e694c61bf1a276de995e75256b20b05
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: 46904 https://gitee.com/openeuler/kernel/issues/I4Y0XO

--------------------------------

The hugepages may still remain PG_uptodate flags when freed. When splitting
hugepage to pages, the flag is not clear. This causes the page to be allocated
with PG_uptodate flags and user may read incorrect datas.

In order to solve this problem and similar problems, add free_pages_prepares()
to clear page when splitting pages to small pool.

Signed-off-by: Liu Shixin <liushixin2@huawei.com>
Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 mm/dynamic_hugetlb.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/mm/dynamic_hugetlb.c b/mm/dynamic_hugetlb.c
index f20e654cc856..92b7ba6f37eb 100644
--- a/mm/dynamic_hugetlb.c
+++ b/mm/dynamic_hugetlb.c
@@ -74,14 +74,16 @@ static void __hpool_split_huge_page(struct dhugetlb_pool *hpool, struct page *pa
 
 	__ClearPageHead(page);
 	for (i = 0; i < nr_pages; i++) {
-		page[i].flags &= ~(1 << PG_locked | 1 << PG_error |
-				1 << PG_referenced | 1 << PG_dirty |
-				1 << PG_active | 1 << PG_private |
-				1 << PG_writeback);
 		if (i != 0) {
 			page[i].mapping = NULL;
 			clear_compound_head(&page[i]);
 		}
+		/*
+		 * If a hugepage is mapped in private mode, the PG_uptodate bit
+		 * will not be cleared when the hugepage freed. Clear the
+		 * hugepage using free_pages_prepare() here.
+		 */
+		free_pages_prepare(&page[i], 0, false);
 		add_new_page_to_pool(hpool, &page[i], HUGE_PAGES_POOL_4K);
 	}
 }
-- 
2.26.2

