From 15e9b79cb67af4b286812a94237b9b1149843dfb Mon Sep 17 00:00:00 2001
From: Zheng Zengkai <zhengzengkai@huawei.com>
Date: Tue, 27 Sep 2022 21:12:14 +0800
Subject: [PATCH] sched/fair: Fix kabi broken in struct cfs_rq
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 15e9b79cb67af4b286812a94237b9b1149843dfb
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I5L6CQ
CVE: NA

---------------------------------------

In struct cfs_rq, the name of 'throttled_clock_pelt' and
'throttled_clock_pelt_time' changed causing kabi broken,
use KABI_REPLACE to fix it.

Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Wang Hai <wanghai38@huawei.com>
Reviewed-by: Xie XiuQi <xiexiuqi@huawei.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 kernel/sched/sched.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/sched.h b/kernel/sched/sched.h
index 4a2a984b1264..36eda0407cf1 100644
--- a/kernel/sched/sched.h
+++ b/kernel/sched/sched.h
@@ -618,8 +618,8 @@ struct cfs_rq {
 	s64			runtime_remaining;
 
 	u64			throttled_clock;
-	u64			throttled_clock_pelt;
-	u64			throttled_clock_pelt_time;
+	KABI_REPLACE(u64 throttled_clock_task, u64 throttled_clock_pelt)
+	KABI_REPLACE(u64 throttled_clock_task_time, u64 throttled_clock_pelt_time)
 	int			throttled;
 	int			throttle_count;
 	struct list_head	throttled_list;
-- 
2.34.1

