From c3264a3c4fb7a36f7c393e1c4742925af6b49397 Mon Sep 17 00:00:00 2001
From: He Sheng <hesheng@wxiat.com>
Date: Tue, 7 Jun 2022 17:42:50 +0800
Subject: [PATCH] sw64: signal: save/restore fpregs with copy user
Patch-mainline: NO, OTHERS
References: openEuler-22.03-LTS
Modified-by-SEL: No


Sunway inclusion
category: performance
bugzilla: https://gitee.com/openeuler/kernel/issues/I56XPR

--------------------------------

Both context_fpregs and sc_fpregs are contigous, so it may improve
performance with copy_{from,to}_user.

Signed-off-by: He Sheng <hesheng@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/signal.c | 14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

diff --git a/arch/sw_64/kernel/signal.c b/arch/sw_64/kernel/signal.c
index c0fd86deb78b..dd0d8ff42420 100644
--- a/arch/sw_64/kernel/signal.c
+++ b/arch/sw_64/kernel/signal.c
@@ -65,8 +65,7 @@ restore_sigcontext(struct sigcontext __user *sc, struct pt_regs *regs)
 {
 	unsigned long usp;
 	struct switch_stack *sw = (struct switch_stack *)regs - 1;
-	unsigned long *ctx_fp = (unsigned long *)&current->thread.ctx_fp;
-	long i, err = __get_user(regs->pc, &sc->sc_pc);
+	long err = __get_user(regs->pc, &sc->sc_pc);
 
 	current->restart_block.fn = do_no_restart_syscall;
 
@@ -105,8 +104,8 @@ restore_sigcontext(struct sigcontext __user *sc, struct pt_regs *regs)
 	err |= __get_user(usp, sc->sc_regs+30);
 	wrusp(usp);
 	/* simd-fp */
-	for (i = 0; i < 31 * 4; i++)
-		err |= __get_user(ctx_fp[i], sc->sc_fpregs + i);
+	err |= __copy_from_user(&current->thread.ctx_fp,
+			&sc->sc_fpregs, sizeof(struct context_fpregs));
 	err |= __get_user(current->thread.fpcr, &sc->sc_fpcr);
 
 	return err;
@@ -193,8 +192,7 @@ setup_sigcontext(struct sigcontext __user *sc, struct pt_regs *regs,
 		 unsigned long mask, unsigned long sp)
 {
 	struct switch_stack *sw = (struct switch_stack *)regs - 1;
-	unsigned long *ctx_fp = (unsigned long *)&current->thread.ctx_fp;
-	long i, err = 0;
+	long err = 0;
 
 	err |= __put_user(on_sig_stack((unsigned long)sc), &sc->sc_onstack);
 	err |= __put_user(mask, &sc->sc_mask);
@@ -234,8 +232,8 @@ setup_sigcontext(struct sigcontext __user *sc, struct pt_regs *regs,
 	err |= __put_user(sp, sc->sc_regs+30);
 	err |= __put_user(0, sc->sc_regs+31);
 	/* simd-fp */
-	for (i = 0; i < 31 * 4; i++)
-		err |= __put_user(ctx_fp[i], sc->sc_fpregs + i);
+	err |= __copy_to_user(&sc->sc_fpregs,
+			&current->thread.ctx_fp, sizeof(struct context_fpregs));
 	err |= __put_user(current->thread.fpcr, &sc->sc_fpcr);
 
 	err |= __put_user(regs->trap_a0, &sc->sc_traparg_a0);
-- 
2.34.1

