From 440bde994fcaf1c4ac949d30f3b885867b567912 Mon Sep 17 00:00:00 2001
From: Mao HongBo <maohongbo@phytium.com.cn>
Date: Thu, 17 Mar 2022 20:16:30 +0800
Subject: [PATCH] irqchip/gic-phytium-2500: Fix issue that interrupts are
 concentrated in one cpu
Patch-mainline: NO, OTHERS
References: openEuler-22.03-LTS
Modified-by-SEL: No


Phytium inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I41AUQ
CVE: NA

-------------------------------------------------

Fix the issue that interrupts are concentrated in one cpu
for Phytium S2500 server.

Signed-off-by: Mao HongBo <maohongbo@phytium.com.cn>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Reviewed-by: Hanjun Guo <guohanjun@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 drivers/irqchip/irq-gic-phytium-2500-its.c | 4 +---
 drivers/irqchip/irq-gic-phytium-2500.c     | 4 +---
 2 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/drivers/irqchip/irq-gic-phytium-2500-its.c b/drivers/irqchip/irq-gic-phytium-2500-its.c
index 4d2758fbad22..cb9962c4debb 100644
--- a/drivers/irqchip/irq-gic-phytium-2500-its.c
+++ b/drivers/irqchip/irq-gic-phytium-2500-its.c
@@ -1675,9 +1675,7 @@ static int its_cpumask_select(struct its_device *its_dev,
     }
 
     cpu = cpumask_any_and(mask_val, cpu_mask);
-    if ((cpu > cpus) && (cpu < (cpus + skt_cpu_cnt[skt_id]))) {
-	cpus = cpu;
-    }
+    cpus = cpus + cpu % skt_cpu_cnt[skt_id];
 
     if (is_kdump_kernel()) {
 	skt = (cpu_logical_map(cpu) >> 16) & 0xff;
diff --git a/drivers/irqchip/irq-gic-phytium-2500.c b/drivers/irqchip/irq-gic-phytium-2500.c
index dbdb778b5b4b..a0c622fb2039 100644
--- a/drivers/irqchip/irq-gic-phytium-2500.c
+++ b/drivers/irqchip/irq-gic-phytium-2500.c
@@ -1345,9 +1345,7 @@ static int gic_cpumask_select(struct irq_data *d, const struct cpumask *mask_val
     }
 
     cpu = cpumask_any_and(mask_val, cpu_online_mask);
-    if ((cpu > cpus) && (cpu < (cpus + skt_cpu_cnt[irq_skt]))) {
-	cpus = cpu;
-    }
+    cpus = cpus + cpu % skt_cpu_cnt[irq_skt];
 
     if (is_kdump_kernel()) {
 	skt = (cpu_logical_map(cpu) >> 16) & 0xff;
-- 
2.26.2

