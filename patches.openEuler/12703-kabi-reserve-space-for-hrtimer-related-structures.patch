From b66ecd37100abe76caba8cb96bae5cfde7f23908 Mon Sep 17 00:00:00 2001
From: Yu Liao <liaoyu15@huawei.com>
Date: Fri, 31 Dec 2021 15:59:20 +0800
Subject: [PATCH] kabi: reserve space for hrtimer related structures
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: b66ecd37100abe76caba8cb96bae5cfde7f23908


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4JBL0
CVE: NA

-------------------------------

Reserve space for hrtimer related structures.

Signed-off-by: Yu Liao <liaoyu15@huawei.com>
Reviewed-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 include/linux/hrtimer.h | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/include/linux/hrtimer.h b/include/linux/hrtimer.h
index 7f1b8549ebce..1525853610b0 100644
--- a/include/linux/hrtimer.h
+++ b/include/linux/hrtimer.h
@@ -20,6 +20,7 @@
 #include <linux/seqlock.h>
 #include <linux/timer.h>
 #include <linux/timerqueue.h>
+#include <linux/kabi.h>
 
 struct hrtimer_clock_base;
 struct hrtimer_cpu_base;
@@ -124,6 +125,9 @@ struct hrtimer {
 	u8				is_rel;
 	u8				is_soft;
 	u8				is_hard;
+
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
 };
 
 /**
@@ -165,6 +169,9 @@ struct hrtimer_clock_base {
 	struct timerqueue_head	active;
 	ktime_t			(*get_time)(void);
 	ktime_t			offset;
+
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
 } __hrtimer_clock_base_align;
 
 enum  hrtimer_base_type {
@@ -235,6 +242,9 @@ struct hrtimer_cpu_base {
 	ktime_t				softirq_expires_next;
 	struct hrtimer			*softirq_next_timer;
 	struct hrtimer_clock_base	clock_base[HRTIMER_MAX_CLOCK_BASES];
+
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
 } ____cacheline_aligned;
 
 static inline void hrtimer_set_expires(struct hrtimer *timer, ktime_t time)
-- 
2.26.2

