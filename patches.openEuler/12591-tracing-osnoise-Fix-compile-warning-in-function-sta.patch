From 738afbf1b5c90cd43e14a60688c57176f0462f82 Mon Sep 17 00:00:00 2001
From: Wang ShaoBo <bobo.shaobowang@huawei.com>
Date: Thu, 30 Dec 2021 16:26:49 +0800
Subject: [PATCH] tracing/osnoise: Fix compile warning in function
 start_kthread
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 738afbf1b5c90cd43e14a60688c57176f0462f82

MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

hulk inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I4G64B
CVE: NA

-------------------------------------------------

This patch fixes following compile warning:

---------------------- [WARNING] checkbuild_arm64 ----------------------

build warning: arm64, allmodconfig

kernel/trace/trace_osnoise.c: In function ‘start_kthread’:
kernel/trace/trace_osnoise.c:1674:8: warning: ‘main’ is usually a function [-Wmain]
  void *main = osnoise_main;
        ^~~~
---------------------- [WARNING] checkbuild_x86_64 ----------------------

build warning: x86_64, allmodconfig

kernel/trace/trace_osnoise.c: In function ‘start_kthread’:
kernel/trace/trace_osnoise.c:1674:8: warning: ‘main’ is usually a function [-Wmain]
  void *main = osnoise_main;
        ^~~~

Signed-off-by: Wang ShaoBo <bobo.shaobowang@huawei.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 kernel/trace/trace_osnoise.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/kernel/trace/trace_osnoise.c b/kernel/trace/trace_osnoise.c
index 545c3d6489bd..cfb80feb291e 100644
--- a/kernel/trace/trace_osnoise.c
+++ b/kernel/trace/trace_osnoise.c
@@ -1671,17 +1671,17 @@ static void stop_per_cpu_kthreads(void)
 static int start_kthread(unsigned int cpu)
 {
 	struct task_struct *kthread;
-	void *main = osnoise_main;
+	void *func_main = osnoise_main;
 	char comm[24];
 
 	if (timerlat_enabled()) {
 		snprintf(comm, 24, "timerlat/%d", cpu);
-		main = timerlat_main;
+		func_main = timerlat_main;
 	} else {
 		snprintf(comm, 24, "osnoise/%d", cpu);
 	}
 
-	kthread = kthread_create_on_cpu(main, NULL, cpu, comm);
+	kthread = kthread_create_on_cpu(func_main, NULL, cpu, comm);
 
 	if (IS_ERR(kthread)) {
 		pr_err(BANNER "could not start sampling thread\n");
-- 
2.26.2

