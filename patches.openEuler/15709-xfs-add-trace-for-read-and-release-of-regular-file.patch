From 2ae705d8329adf3431710ca16a37c47d446cd225 Mon Sep 17 00:00:00 2001
From: Hou Tao <houtao1@huawei.com>
Date: Mon, 23 May 2022 21:18:15 +0800
Subject: [PATCH] xfs: add trace for read and release of regular file
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 2ae705d8329adf3431710ca16a37c47d446cd225
Modified-by-SEL: Yes, refreshed due to different context


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I53R0H
CVE: NA
backport: openEuler-22.03-LTS

---------------------------

Use fs_file_read_do_trace() and trace_fs_file_release() to do that.

Signed-off-by: Hou Tao <houtao1@huawei.com>
Acked-by: fang wei <fangwei1@huawei.com>
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
Reviewed-by: Zhang Yi <yi.zhang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 fs/xfs/xfs_file.c |    3 +++
 1 file changed, 3 insertions(+)

--- a/fs/xfs/xfs_file.c
+++ b/fs/xfs/xfs_file.c
@@ -29,6 +29,7 @@
 #include <linux/backing-dev.h>
 #include <linux/mman.h>
 #include <linux/fadvise.h>
+#include <trace/events/fs.h>
 
 static const struct vm_operations_struct xfs_file_vm_ops;
 
@@ -299,6 +300,7 @@ xfs_file_buffered_aio_read(
 	ssize_t			ret;
 
 	trace_xfs_file_buffered_read(ip, iov_iter_count(to), iocb->ki_pos);
+	fs_file_read_do_trace(iocb);
 
 	ret = xfs_ilock_iocb(iocb, XFS_IOLOCK_SHARED);
 	if (ret)
@@ -1223,6 +1225,7 @@ xfs_file_release(
 	struct inode	*inode,
 	struct file	*filp)
 {
+	trace_fs_file_release(inode, filp);
 	return xfs_release(XFS_I(inode));
 }
 
