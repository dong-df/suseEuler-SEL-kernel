From 8281ed1d2c4d82fe73bee798ce37da65fd2c36a0 Mon Sep 17 00:00:00 2001
From: Baisong Zhong <zhongbaisong@huawei.com>
Date: Mon, 10 Jan 2022 17:33:25 +0800
Subject: [PATCH] tcp: Add some stub info for KABI consistency
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 8281ed1d2c4d82fe73bee798ce37da65fd2c36a0


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4PY1Q
CVE: NA

--------------------------------

We add stub info in some structures to maintain the consistency of KABI

Signed-off-by: Baisong Zhong <zhongbaisong@huawei.com>
Reviewed-by: Wei Yongjun <weiyongjun1@huawei.com>
Reviewed-by: Yue Haibing <yuehaibing@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 include/linux/skbuff.h | 2 ++
 include/net/ipv6.h     | 2 +-
 include/net/sock.h     | 3 +++
 3 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 9e3a454d2377..d485f17ff33a 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -36,6 +36,7 @@
 #include <linux/splice.h>
 #include <linux/in6.h>
 #include <linux/if_packet.h>
+#include <linux/llist.h>
 #include <net/flow.h>
 #include <net/page_pool.h>
 #include <linux/kabi.h>
@@ -732,6 +733,7 @@ struct sk_buff {
 		};
 		struct rb_node		rbnode; /* used in netem, ip4 defrag, and tcp stack */
 		struct list_head	list;
+		struct llist_node	ll_node;
 	};
 
 	union {
diff --git a/include/net/ipv6.h b/include/net/ipv6.h
index bd1f396cc9c7..c0273ae50296 100644
--- a/include/net/ipv6.h
+++ b/include/net/ipv6.h
@@ -344,9 +344,9 @@ struct ipcm6_cookie {
 	struct sockcm_cookie sockc;
 	__s16 hlimit;
 	__s16 tclass;
+	__u16 gso_size;
 	__s8  dontfrag;
 	struct ipv6_txoptions *opt;
-	__u16 gso_size;
 };
 
 static inline void ipcm6_init(struct ipcm6_cookie *ipc6)
diff --git a/include/net/sock.h b/include/net/sock.h
index 712bb7b09f96..b3d451878640 100644
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -63,6 +63,7 @@
 
 #include <linux/atomic.h>
 #include <linux/refcount.h>
+#include <linux/llist.h>
 #include <net/dst.h>
 #include <net/checksum.h>
 #include <net/tcp_states.h>
@@ -405,6 +406,8 @@ struct sock {
 		struct sk_buff	*head;
 		struct sk_buff	*tail;
 	} sk_backlog;
+	struct llist_head defer_list;
+
 #define sk_rmem_alloc sk_backlog.rmem_alloc
 
 	int			sk_forward_alloc;
-- 
2.26.2

