From e4f3f59b49e0d6526b1413493f13fc4aa56aa586 Mon Sep 17 00:00:00 2001
From: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date: Thu, 26 Aug 2021 21:49:43 +0800
Subject: [PATCH] mm: fix oom killing for disabled pid
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: e4f3f59b49e0d6526b1413493f13fc4aa56aa586


hulk inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I46IUJ
CVE: NA

--------------------------------------

In oom_next_task(), if points is equal to LONG_MIN, then we choose it to
kill. That is not correct. LONG_MIN means to disable killing it. So fix
it.

Fixes: 4da32073a8fe ("memcg: support priority for oom")
Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
Reviewed-by: Chen Wandun <chenwandun@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 mm/oom_kill.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/mm/oom_kill.c b/mm/oom_kill.c
index 41668bd37f52..fb39b0902476 100644
--- a/mm/oom_kill.c
+++ b/mm/oom_kill.c
@@ -311,15 +311,15 @@ static enum oom_constraint constrained_alloc(struct oom_control *oc)
  * choose the task with the highest number of 'points'.
  */
 static bool oom_next_task(struct task_struct *task, struct oom_control *oc,
-			unsigned long points)
+			long points)
 {
 	struct mem_cgroup *cur_memcg;
 	struct mem_cgroup *oc_memcg;
 
 	if (!static_branch_likely(&memcg_qos_stat_key))
-		return !points || points < oc->chosen_points;
+		return (points == LONG_MIN || points < oc->chosen_points);
 
-	if (!points)
+	if (points == LONG_MIN)
 		return true;
 
 	if (!oc->chosen)
@@ -341,9 +341,9 @@ static bool oom_next_task(struct task_struct *task, struct oom_control *oc,
 }
 #else
 static inline bool oom_next_task(struct task_struct *task,
-				struct oom_control *oc, unsigned long points)
+				struct oom_control *oc, long points)
 {
-	return !points || points < oc->chosen_points;
+	return (points == LONG_MIN || points < oc->chosen_points);
 }
 #endif
 
-- 
2.26.2

