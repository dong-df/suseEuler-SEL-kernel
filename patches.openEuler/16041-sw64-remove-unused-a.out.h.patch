From df756917fa81b9bd70b50c0f3f4ede94e30f302b Mon Sep 17 00:00:00 2001
From: He Sheng <hesheng@wxiat.com>
Date: Tue, 7 Jun 2022 17:42:01 +0800
Subject: [PATCH] sw64: remove unused a.out.h
Patch-mainline: NO, OTHERS
References: openEuler-22.03-LTS
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56OLG

--------------------------------

It does not support a.out and ECOFF binaries on sw64, so a.out.h
can be removed.

Signed-off-by: He Sheng <hesheng@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/include/asm/a.out.h      | 16 ------
 arch/sw_64/include/uapi/asm/a.out.h | 88 -----------------------------
 2 files changed, 104 deletions(-)
 delete mode 100644 arch/sw_64/include/asm/a.out.h
 delete mode 100644 arch/sw_64/include/uapi/asm/a.out.h

diff --git a/arch/sw_64/include/asm/a.out.h b/arch/sw_64/include/asm/a.out.h
deleted file mode 100644
index 4f2004a7fa8e..000000000000
--- a/arch/sw_64/include/asm/a.out.h
+++ /dev/null
@@ -1,16 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _ASM_SW64_A_OUT_H
-#define _ASM_SW64_A_OUT_H
-
-#include <uapi/asm/a.out.h>
-
-/* Assume that start addresses below 4G belong to a TASO application.
- * Unfortunately, there is no proper bit in the exec header to check.
- * Worse, we have to notice the start address before swapping to use
- * /sbin/loader, which of course is _not_ a TASO application.
- */
-#define SET_AOUT_PERSONALITY(BFPM, EX) \
-	set_personality(((BFPM->taso || EX.ah.entry < 0x100000000L \
-			? ADDR_LIMIT_32BIT : 0) | PER_OSF4))
-
-#endif /* _ASM_SW64_A_OUT_H */
diff --git a/arch/sw_64/include/uapi/asm/a.out.h b/arch/sw_64/include/uapi/asm/a.out.h
deleted file mode 100644
index addb648b8ed6..000000000000
--- a/arch/sw_64/include/uapi/asm/a.out.h
+++ /dev/null
@@ -1,88 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#ifndef _UAPI_ASM_SW64_A_OUT_H
-#define _UAPI_ASM_SW64_A_OUT_H
-
-#include <linux/types.h>
-
-/*
- * ECOFF header structs.  ECOFF files consist of:
- *	- a file header (struct filehdr),
- *	- an a.out header (struct aouthdr),
- *	- one or more section headers (struct scnhdr).
- *	  The filhdr's "f_nscns" field contains the
- *	  number of section headers.
- */
-
-struct filehdr {
-	/* "file" header */
-	__u16 f_magic, f_nscns;
-	__u32 f_timdat;
-	__u64 f_symptr;
-	__u32 f_nsyms;
-	__u16 f_opthdr, f_flags;
-};
-
-struct aouthdr {
-	__u64 info;		/* after that it looks quite normal.. */
-	__u64 tsize;
-	__u64 dsize;
-	__u64 bsize;
-	__u64 entry;
-	__u64 text_start;	/* with a few additions that actually make sense */
-	__u64 data_start;
-	__u64 bss_start;
-	__u32 gprmask, fprmask;	/* bitmask of general & floating point regs used in binary */
-	__u64 gpvalue;
-};
-
-struct scnhdr {
-	char	s_name[8];
-	__u64	s_paddr;
-	__u64	s_vaddr;
-	__u64	s_size;
-	__u64	s_scnptr;
-	__u64	s_relptr;
-	__u64	s_lnnoptr;
-	__u16	s_nreloc;
-	__u16	s_nlnno;
-	__u32	s_flags;
-};
-
-struct exec {
-	/* "file" header */
-	struct filehdr		fh;
-	struct aouthdr		ah;
-};
-
-/*
- * Define's so that the kernel exec code can access the a.out header
- * fields...
- */
-#define	a_info		ah.info
-#define	a_text		ah.tsize
-#define a_data		ah.dsize
-#define a_bss		ah.bsize
-#define a_entry		ah.entry
-#define a_textstart	ah.text_start
-#define	a_datastart	ah.data_start
-#define	a_bssstart	ah.bss_start
-#define	a_gprmask	ah.gprmask
-#define a_fprmask	ah.fprmask
-#define a_gpvalue	ah.gpvalue
-
-#define N_TXTADDR(x)	((x).a_textstart)
-#define N_DATADDR(x)	((x).a_datastart)
-#define N_BSSADDR(x)	((x).a_bssstart)
-#define N_DRSIZE(x)	0
-#define N_TRSIZE(x)	0
-#define N_SYMSIZE(x)	0
-
-#define AOUTHSZ		sizeof(struct aouthdr)
-#define SCNHSZ		sizeof(struct scnhdr)
-#define SCNROUND	16
-
-#define N_TXTOFF(x) \
-	((long) N_MAGIC(x) == ZMAGIC ? 0 : \
-	(sizeof(struct exec) + (x).fh.f_nscns * SCNHSZ + SCNROUND - 1) & ~(SCNROUND - 1))
-
-#endif /* _UAPI_ASM_SW64_A_OUT_H */
-- 
2.34.1

