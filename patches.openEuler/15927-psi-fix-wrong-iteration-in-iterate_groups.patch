From 915777f47c325971bb5cb4647fda047ac04d1fd8 Mon Sep 17 00:00:00 2001
From: Chen Wandun <chenwandun@huawei.com>
Date: Tue, 31 May 2022 23:19:48 +0800
Subject: [PATCH] psi: fix wrong iteration in iterate_groups
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 915777f47c325971bb5cb4647fda047ac04d1fd8
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I562O9
CVE: NA
backport: openEuler-22.03-LTS

--------------------------------

It is different to get the cgroup that is used to update psi info in
cgroup v1 and cgroup v2.

task_cgroup can only used in cgroup v1, so add branch to achieve this.

Signed-off-by: Chen Wandun <chenwandun@huawei.com>
Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 kernel/sched/psi.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/kernel/sched/psi.c b/kernel/sched/psi.c
index 0c9a596692a5..c84c6f7b59fd 100644
--- a/kernel/sched/psi.c
+++ b/kernel/sched/psi.c
@@ -757,9 +757,13 @@ static struct psi_group *iterate_groups(struct task_struct *task, void **iter)
 			cgroup = task->cgroups->dfl_cgrp;
 		else {
 #ifdef CONFIG_CGROUP_CPUACCT
-			rcu_read_lock();
-			cgroup = task_cgroup(task, cpuacct_cgrp_id);
-			rcu_read_unlock();
+			if (!cgroup_subsys_on_dfl(cpuacct_cgrp_subsys)) {
+				rcu_read_lock();
+				cgroup = task_cgroup(task, cpuacct_cgrp_id);
+				rcu_read_unlock();
+			} else {
+				cgroup = task->cgroups->dfl_cgrp;
+			}
 #else
 			cgroup = NULL;
 #endif
-- 
2.34.1

