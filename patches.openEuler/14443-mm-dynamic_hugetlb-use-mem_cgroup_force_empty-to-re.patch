From 17f602db2fcaf9bb6cfc246c3c88f956c69a0888 Mon Sep 17 00:00:00 2001
From: Liu Shixin <liushixin2@huawei.com>
Date: Sun, 20 Mar 2022 10:48:18 +0800
Subject: [PATCH] mm/dynamic_hugetlb: use mem_cgroup_force_empty to reclaim
 pages
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 17f602db2fcaf9bb6cfc246c3c88f956c69a0888
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: 46904 https://gitee.com/openeuler/kernel/issues/I4Y0XO

--------------------------------

When all processes in the memory cgroup are finished, some memory may still be
occupied such as file cache. Use mem_cgroup_force_empty to reclaim these pages
that charged in the memory cgroup before merging all pages.

Signed-off-by: Liu Shixin <liushixin2@huawei.com>
Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 include/linux/memcontrol.h | 2 ++
 mm/dynamic_hugetlb.c       | 6 ++++++
 mm/memcontrol.c            | 2 +-
 3 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/include/linux/memcontrol.h b/include/linux/memcontrol.h
index 7cc7cfe55d9a..0e55013c570d 100644
--- a/include/linux/memcontrol.h
+++ b/include/linux/memcontrol.h
@@ -1258,6 +1258,8 @@ static inline bool memcg_has_children(struct mem_cgroup *memcg)
 	return ret;
 }
 
+int mem_cgroup_force_empty(struct mem_cgroup *memcg);
+
 #else /* CONFIG_MEMCG */
 
 #define MEM_CGROUP_ID_SHIFT	0
diff --git a/mm/dynamic_hugetlb.c b/mm/dynamic_hugetlb.c
index 90e2a52390b2..8366b54dfcfe 100644
--- a/mm/dynamic_hugetlb.c
+++ b/mm/dynamic_hugetlb.c
@@ -849,6 +849,12 @@ int hugetlb_pool_destroy(struct cgroup *cgrp)
 	if (!hpool || hpool->attach_memcg != memcg)
 		return 0;
 
+	/*
+	 * Even if no process exists in the memory cgroup, some pages may still
+	 * be occupied. Release these pages before merging them.
+	 */
+	mem_cgroup_force_empty(hpool->attach_memcg);
+
 	ret = hugetlb_pool_merge_all_pages(hpool);
 	if (ret)
 		return -ENOMEM;
diff --git a/mm/memcontrol.c b/mm/memcontrol.c
index 2804fe9d3dae..fad3d4dd88ec 100644
--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@ -3407,7 +3407,7 @@ unsigned long mem_cgroup_soft_limit_reclaim(pg_data_t *pgdat, int order,
  *
  * Caller is responsible for holding css reference for memcg.
  */
-static int mem_cgroup_force_empty(struct mem_cgroup *memcg)
+int mem_cgroup_force_empty(struct mem_cgroup *memcg)
 {
 	int nr_retries = MAX_RECLAIM_RETRIES;
 
-- 
2.26.2

