From 7645991c2bc6cd906f6e755801e223311e10e2fd Mon Sep 17 00:00:00 2001
From: Lu Feifei <lufeifei@wxiat.com>
Date: Tue, 7 Jun 2022 17:42:53 +0800
Subject: [PATCH] sw64: unify 32-bit MEMIO address of host and guest
Patch-mainline: NO, OTHERS
References: openEuler-22.03-LTS
Modified-by-SEL: No


Sunway inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I56WV8

--------------------------------

When passing through device, 32-bit MEMIO address of guest os is
between 3G and 3.5G, and it may produce dma address beyond 3.5G,
which is considered to be MEMIO address of host and cause DMA to
to fail. To fix it, 32-bit MEMEIO address of guest os should keep
consistent with host.

Signed-off-by: Lu Feifei <lufeifei@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/chip/chip3/chip.c       | 5 +----
 arch/sw_64/chip/chip3/pci-quirks.c | 4 +---
 arch/sw_64/include/asm/chip3_io.h  | 1 -
 arch/sw_64/kernel/pci.c            | 8 +++-----
 4 files changed, 5 insertions(+), 13 deletions(-)

diff --git a/arch/sw_64/chip/chip3/chip.c b/arch/sw_64/chip/chip3/chip.c
index bd20e262e609..2d8f3c81e1c6 100644
--- a/arch/sw_64/chip/chip3/chip.c
+++ b/arch/sw_64/chip/chip3/chip.c
@@ -538,10 +538,7 @@ static void chip3_hose_init(struct pci_controller *hose)
 	hose->ep_config_space_base = PAGE_OFFSET | pci_io_base | PCI_EP_CFG;
 	hose->rc_config_space_base = PAGE_OFFSET | pci_io_base | PCI_RC_CFG;
 
-	if (is_in_host())
-		hose->mem_space->start = pci_io_base + PCI_32BIT_MEMIO;
-	else
-		hose->mem_space->start = pci_io_base + PCI_32BIT_VT_MEMIO;
+	hose->mem_space->start = pci_io_base + PCI_32BIT_MEMIO;
 	hose->mem_space->end = hose->mem_space->start + PCI_32BIT_MEMIO_SIZE - 1;
 	hose->mem_space->name = "pci memory space";
 	hose->mem_space->flags = IORESOURCE_MEM;
diff --git a/arch/sw_64/chip/chip3/pci-quirks.c b/arch/sw_64/chip/chip3/pci-quirks.c
index 9043e56f9092..22887d269fe3 100644
--- a/arch/sw_64/chip/chip3/pci-quirks.c
+++ b/arch/sw_64/chip/chip3/pci-quirks.c
@@ -231,9 +231,7 @@ DECLARE_PCI_FIXUP_FINAL(PCI_VENDOR_ID_INTEL, PCI_ANY_ID, enable_sw_dca);
 void __init reserve_mem_for_pci(void)
 {
 	int ret;
-	unsigned long base;
-
-	base = is_in_host() ? PCI_32BIT_MEMIO : PCI_32BIT_VT_MEMIO;
+	unsigned long base = PCI_32BIT_MEMIO;
 
 	ret = add_memmap_region(base, PCI_32BIT_MEMIO_SIZE, memmap_pci);
 	if (ret) {
diff --git a/arch/sw_64/include/asm/chip3_io.h b/arch/sw_64/include/asm/chip3_io.h
index 1028842f7a81..0125b950da7c 100644
--- a/arch/sw_64/include/asm/chip3_io.h
+++ b/arch/sw_64/include/asm/chip3_io.h
@@ -19,7 +19,6 @@
 #define PCI_LEGACY_IO		(0x1UL << 32)
 #define PCI_LEGACY_IO_SIZE	(0x100000000UL)
 #define PCI_MEM_UNPRE		0x0UL
-#define PCI_32BIT_VT_MEMIO	(0xc0000000UL)
 #define PCI_32BIT_MEMIO		(0xe0000000UL)
 #define PCI_32BIT_MEMIO_SIZE	(0x20000000UL)
 #define PCI_64BIT_MEMIO		(0x1UL << 39)
diff --git a/arch/sw_64/kernel/pci.c b/arch/sw_64/kernel/pci.c
index 75d2e645bf2c..81393484ed51 100644
--- a/arch/sw_64/kernel/pci.c
+++ b/arch/sw_64/kernel/pci.c
@@ -233,13 +233,11 @@ void __init common_init_pci(void)
 		hose->busn_space->start = last_bus;
 		init_busnr = (0xff << 16) + ((last_bus + 1) << 8) + (last_bus);
 		write_rc_conf(hose->node, hose->index, RC_PRIMARY_BUS, init_busnr);
-		if (is_in_host()) {
-			offset = hose->mem_space->start - PCI_32BIT_MEMIO;
+		offset = hose->mem_space->start - PCI_32BIT_MEMIO;
+		if (is_in_host())
 			hose->first_busno = last_bus + 1;
-		} else {
-			offset = hose->mem_space->start - PCI_32BIT_VT_MEMIO;
+		else
 			hose->first_busno = last_bus;
-		}
 		pci_add_resource_offset(&bridge->windows, hose->mem_space, offset);
 		pci_add_resource_offset(&bridge->windows, hose->io_space, hose->io_space->start);
 		pci_add_resource_offset(&bridge->windows, hose->pre_mem_space, 0);
-- 
2.34.1

