From d372f3a88bc3cd5b02c537a1bce36e53a7b002c5 Mon Sep 17 00:00:00 2001
From: Mao Minkai <maominkai@wxiat.com>
Date: Tue, 7 Jun 2022 17:41:37 +0800
Subject: [PATCH] sw64: mm: use memblock to find the end of memory
Patch-mainline: NO, OTHERS
References: openEuler-22.03-LTS
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56TYY

--------------------------------

Use memblock_end_of_DRAM() instead of PFN_PHYS(max_low_pfn) in
process_memmap to find a more accurate end of memory.

Signed-off-by: Mao Minkai <maominkai@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kernel/setup.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/sw_64/kernel/setup.c b/arch/sw_64/kernel/setup.c
index 86cae2962e97..250a45ee56f9 100644
--- a/arch/sw_64/kernel/setup.c
+++ b/arch/sw_64/kernel/setup.c
@@ -356,7 +356,7 @@ static void * __init move_initrd(unsigned long mem_limit)
 
 static int __init memmap_range_valid(phys_addr_t base, phys_addr_t size)
 {
-	if (phys_to_virt(base + size - 1) < phys_to_virt(PFN_PHYS(max_low_pfn)))
+	if ((base + size) <= memblock_end_of_DRAM())
 		return true;
 	else
 		return false;
@@ -379,7 +379,7 @@ void __init process_memmap(void)
 		case memmap_reserved:
 			if (!memmap_range_valid(base, size)) {
 				pr_err("reserved memmap region [mem %#018llx-%#018llx] extends beyond end of memory (%#018llx)\n",
-						base, base + size - 1, PFN_PHYS(max_low_pfn));
+						base, base + size - 1, memblock_end_of_DRAM());
 			} else {
 				pr_info("reserved memmap region [mem %#018llx-%#018llx]\n",
 						base, base + size - 1);
@@ -395,7 +395,7 @@ void __init process_memmap(void)
 		case memmap_pci:
 			if (!memmap_range_valid(base, size)) {
 				pr_info("pci memmap region [mem %#018llx-%#018llx] extends beyond end of memory (%#018llx)\n",
-						base, base + size - 1, PFN_PHYS(max_low_pfn));
+						base, base + size - 1, memblock_end_of_DRAM());
 			} else {
 				pr_info("pci memmap region [mem %#018llx-%#018llx]\n",
 						base, base + size - 1);
@@ -407,10 +407,10 @@ void __init process_memmap(void)
 			break;
 		case memmap_initrd:
 			if (!memmap_range_valid(base, size)) {
-				base = (unsigned long) move_initrd(PFN_PHYS(max_low_pfn));
+				base = (unsigned long) move_initrd(memblock_end_of_DRAM());
 				if (!base) {
 					pr_err("initrd memmap region [mem %#018llx-%#018llx] extends beyond end of memory (%#018llx)\n",
-							base, base + size - 1, PFN_PHYS(max_low_pfn));
+							base, base + size - 1, memblock_end_of_DRAM());
 				} else {
 					memmap_map[i].addr = base;
 					pr_info("initrd memmap region [mem %#018llx-%#018llx]\n",
-- 
2.34.1

