From a5ddb452cea286eb5786bef1d01b6e06d5f2ca7c Mon Sep 17 00:00:00 2001
From: Liu Shixin <liushixin2@huawei.com>
Date: Sun, 20 Mar 2022 10:48:20 +0800
Subject: [PATCH] mm/dynamic_hugetlb: only support to merge 2M dynamicly
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: a5ddb452cea286eb5786bef1d01b6e06d5f2ca7c
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: 46904 https://gitee.com/openeuler/kernel/issues/I4Y0XO

--------------------------------

We do not support dynamic combination of 1G hugepages dynamicly as this can
result in a significant performance loss. We suggest to configure the number of
hugepages immediately after creating a dynamic hugetlb pool rather than modify
them dynamicly while some processes are runing.

Signed-off-by: Liu Shixin <liushixin2@huawei.com>
Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 mm/dynamic_hugetlb.c | 25 ++++++++++++++-----------
 1 file changed, 14 insertions(+), 11 deletions(-)

diff --git a/mm/dynamic_hugetlb.c b/mm/dynamic_hugetlb.c
index d07877559bac..bec6ff560e37 100644
--- a/mm/dynamic_hugetlb.c
+++ b/mm/dynamic_hugetlb.c
@@ -938,17 +938,20 @@ static ssize_t update_reserved_pages(struct mem_cgroup *memcg, char *buf, int hp
 			if (hpool_split_page(hpool, hpages_pool_idx - 1))
 				break;
 		}
-		/*
-		 * First try to merge pages without migration, If this can not meet
-		 * the requirements, then try to merge pages with migration.
-		 */
-		while (delta > hpages_pool->free_normal_pages) {
-			if (hpool_merge_page(hpool, hpages_pool_idx, false))
-				break;
-		}
-		while (delta > hpages_pool->free_normal_pages) {
-			if (hpool_merge_page(hpool, hpages_pool_idx, true))
-				break;
+		/* Currently, only merging 2M hugepages is supported */
+		if (hpages_pool_idx == HUGE_PAGES_POOL_2M) {
+			/*
+			 * First try to merge pages without migration, If this can not meet
+			 * the requirements, then try to merge pages with migration.
+			 */
+			while (delta > hpages_pool->free_normal_pages) {
+				if (hpool_merge_page(hpool, hpages_pool_idx, false))
+					break;
+			}
+			while (delta > hpages_pool->free_normal_pages) {
+				if (hpool_merge_page(hpool, hpages_pool_idx, true))
+					break;
+			}
 		}
 		delta = min(nr_pages - hpages_pool->nr_huge_pages, hpages_pool->free_normal_pages);
 		hpages_pool->nr_huge_pages += delta;
-- 
2.26.2

