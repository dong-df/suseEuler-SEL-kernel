From ec63b940a805fa5b0942ffa5e43c82608ece80dd Mon Sep 17 00:00:00 2001
From: Lu Feifei <lufeifei@wxiat.com>
Date: Tue, 7 Jun 2022 17:42:31 +0800
Subject: [PATCH] sw64: kvm: handle ldl_u and stl_u when exit mmio
Patch-mainline: NO, OTHERS
References: openEuler-22.03-LTS
Modified-by-SEL: No


Sunway inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I56WV8

--------------------------------

In guest os, ldl_u and stl_u may access mmio in some cases, so we
have to decode and handle this issue when exit mmio.

Signed-off-by: Lu Feifei <lufeifei@wxiat.com>

Signed-off-by: Gu Zitao <guzitao@wxiat.com>
Acked-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/sw_64/kvm/emulate.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/arch/sw_64/kvm/emulate.c b/arch/sw_64/kvm/emulate.c
index 1552119e6346..bcc06c0dd618 100644
--- a/arch/sw_64/kvm/emulate.c
+++ b/arch/sw_64/kvm/emulate.c
@@ -32,6 +32,7 @@ void sw64_decode(struct kvm_vcpu *vcpu, unsigned int insn, struct kvm_run *run)
 		vcpu->arch.mmio_decode.rt = ra;
 		break;
 	case 0x23: /* LDL */
+	case 0x24: /* LDL_U */
 		run->mmio.is_write = 0;
 		run->mmio.len = 8;
 		vcpu->arch.mmio_decode.rt = ra;
@@ -52,6 +53,7 @@ void sw64_decode(struct kvm_vcpu *vcpu, unsigned int insn, struct kvm_run *run)
 		run->mmio.len = 4;
 		break;
 	case 0x2b: /* STL */
+	case 0x2c: /* STL_U */
 		run->mmio.is_write = 1;
 		*(unsigned long *)run->mmio.data = vcpu_get_reg(vcpu, ra);
 		run->mmio.len = 8;
-- 
2.34.1

