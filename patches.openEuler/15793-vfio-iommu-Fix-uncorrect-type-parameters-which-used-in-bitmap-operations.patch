From 6ce2f6bd78c0cbb54a4fe60b6c630a102efa1188 Mon Sep 17 00:00:00 2001
From: Kunkun Jiang <jiangkunkun@huawei.com>
Date: Sat, 28 May 2022 12:04:12 +0800
Subject: [PATCH] vfio/iommu: Fix uncorrect type parameters which used in
 bitmap operations
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 6ce2f6bd78c0cbb54a4fe60b6c630a102efa1188
Modified-by-SEL: No


virt inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I573P1
CVE: NA

------------------------------

Some parameters in iommu_clear_dirty_log/vfio_iova_dirty_log_clear
have uncorrect type, which used in bitmap operations. In some cases,
it will cause data overflow.

Fixes: bbf3b39e5576b (iommu: Introduce dirty log tracking framework)
Fixes: f1c9b9fa4fbc0 (vfio/iommu_type1: Add support for manual dirty log clear)
Signed-off-by: Kunkun Jiang <jiangkunkun@huawei.com>
Reviewed-by: Keqian Zhu <zhukeqian1@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 drivers/iommu/iommu.c           | 7 +++----
 drivers/vfio/vfio_iommu_type1.c | 4 ++--
 2 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/iommu/iommu.c b/drivers/iommu/iommu.c
index e61d16f0ede2..9116c93945d0 100644
--- a/drivers/iommu/iommu.c
+++ b/drivers/iommu/iommu.c
@@ -3142,9 +3142,8 @@ int iommu_clear_dirty_log(struct iommu_domain *domain,
 			  unsigned long bitmap_pgshift)
 {
 	unsigned long riova, rsize;
-	unsigned int min_pagesz;
+	unsigned int min_pagesz, rs, re, start, end;
 	bool flush = false;
-	int rs, re, start, end;
 	int ret = 0;
 
 	min_pagesz = 1 << __ffs(domain->pgsize_bitmap);
@@ -3160,8 +3159,8 @@ int iommu_clear_dirty_log(struct iommu_domain *domain,
 	end = start + (size >> bitmap_pgshift);
 	bitmap_for_each_set_region(bitmap, rs, re, start, end) {
 		flush = true;
-		riova = base_iova + (rs << bitmap_pgshift);
-		rsize = (re - rs) << bitmap_pgshift;
+		riova = base_iova + ((unsigned long)rs << bitmap_pgshift);
+		rsize = (unsigned long)(re - rs) << bitmap_pgshift;
 		ret = __iommu_clear_dirty_log(domain, riova, rsize, bitmap,
 					      base_iova, bitmap_pgshift);
 		if (ret)
diff --git a/drivers/vfio/vfio_iommu_type1.c b/drivers/vfio/vfio_iommu_type1.c
index f556b572c86d..1422cbb37013 100644
--- a/drivers/vfio/vfio_iommu_type1.c
+++ b/drivers/vfio/vfio_iommu_type1.c
@@ -1096,7 +1096,7 @@ static int vfio_iova_dirty_log_clear(u64 __user *bitmap,
 	unsigned long bitmap_size;
 	unsigned long *bitmap_buffer = NULL;
 	bool clear_valid;
-	int rs, re, start, end, dma_offset;
+	unsigned int rs, re, start, end, dma_offset;
 	int ret = 0;
 
 	bitmap_size = DIRTY_BITMAP_BYTES(size >> pgshift);
@@ -1128,7 +1128,7 @@ static int vfio_iova_dirty_log_clear(u64 __user *bitmap,
 		end = (end_iova - iova) >> pgshift;
 		bitmap_for_each_set_region(bitmap_buffer, rs, re, start, end) {
 			clear_valid = true;
-			riova = iova + (rs << pgshift);
+			riova = iova + ((unsigned long)rs << pgshift);
 			dma_offset = (riova - dma->iova) >> pgshift;
 			bitmap_clear(dma->bitmap, dma_offset, re - rs);
 		}
-- 
2.34.1

