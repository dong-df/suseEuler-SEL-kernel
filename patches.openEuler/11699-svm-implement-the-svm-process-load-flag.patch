From e68fca36f3795955600e4802eea8e408ad9a9379 Mon Sep 17 00:00:00 2001
From: Lijun Fang <fanglijun3@huawei.com>
Date: Fri, 3 Dec 2021 18:15:33 +0800
Subject: [PATCH] svm: implement the svm process load flag
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: e68fca36f3795955600e4802eea8e408ad9a9379


ascend inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4JMM0
CVE: NA

--------

Signed-off-by: Lijun Fang <fanglijun3@huawei.com>
Reviewed-by: Weilong Chen <chenweilong@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 drivers/char/svm.c | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/drivers/char/svm.c b/drivers/char/svm.c
index b1dd373a745c..60e9f022bfb3 100644
--- a/drivers/char/svm.c
+++ b/drivers/char/svm.c
@@ -36,6 +36,7 @@
 #define SVM_DEVICE_NAME "svm"
 #define ASID_SHIFT		48
 
+#define SVM_IOCTL_LOAD_FLAG			0xfffa
 #define SVM_IOCTL_PROCESS_BIND		0xffff
 
 #define CORE_SID		0
@@ -100,6 +101,8 @@ static char *svm_cmd_to_string(unsigned int cmd)
 	switch (cmd) {
 	case SVM_IOCTL_PROCESS_BIND:
 		return "bind";
+	case SVM_IOCTL_LOAD_FLAG:
+		return "load flag";
 	case SVM_IOCTL_RELEASE_PHYS32:
 		return "release phys";
 	default:
@@ -494,6 +497,25 @@ static int svm_open(struct inode *inode, struct file *file)
 	return 0;
 }
 
+static int svm_proc_load_flag(int __user *arg)
+{
+	static atomic_t l2buf_load_flag = ATOMIC_INIT(0);
+	int flag;
+
+	if (!acpi_disabled)
+		return -EPERM;
+
+	if (arg == NULL)
+		return -EINVAL;
+
+	if (0 == (atomic_cmpxchg(&l2buf_load_flag, 0, 1)))
+		flag = 0;
+	else
+		flag = 1;
+
+	return put_user(flag, arg);
+}
+
 static unsigned long svm_get_unmapped_area(struct file *file,
 		unsigned long addr0, unsigned long len,
 		unsigned long pgoff, unsigned long flags)
@@ -689,6 +711,9 @@ static long svm_ioctl(struct file *file, unsigned int cmd,
 			return -EFAULT;
 		}
 		break;
+	case SVM_IOCTL_LOAD_FLAG:
+		err = svm_proc_load_flag((int __user *)arg);
+		break;
 	case SVM_IOCTL_RELEASE_PHYS32:
 		err = svm_release_phys32((unsigned long __user *)arg);
 		break;
-- 
2.26.2

