From 414a578b07f9040de2bf9be340bd6e28326ca788 Mon Sep 17 00:00:00 2001
From: liangtian <liangtian13@huawei.com>
Date: Wed, 27 Apr 2022 18:48:32 +0800
Subject: [PATCH] x86: KVM: Fixed the bug that WAITmax cannot be updated in
 real time
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 414a578b07f9040de2bf9be340bd6e28326ca788
Modified-by-SEL: No


virt inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I53PTV?from=project-issue
CVE: NA

-----------------------------------------------------

Since the reset function is in kvm_intel module instead of kvm
module, the attribute weak function in kvm_main.c could not be found, which
would cause st_max in X86 never be refreshed.
The solution is to define the reset function in x86.c under the kvm module.

Signed-off-by: liangtian <liangtian13@huawei.com>
Reviewed-by: Keqian Zhu <zhukeqian1@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/x86/kvm/vmx/vmx.c | 5 -----
 arch/x86/kvm/x86.c     | 5 +++++
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
index 26046a755f4a..ea2ed880ecf5 100644
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -367,11 +367,6 @@ static u32 vmx_segment_access_rights(struct kvm_segment *var);
 static __always_inline void vmx_disable_intercept_for_msr(struct kvm_vcpu *vcpu,
 							  u32 msr, int type);
 
-void kvm_arch_vcpu_stat_reset(struct kvm_vcpu_stat *vcpu_stat)
-{
-	vcpu_stat->st_max = 0;
-}
-
 void vmx_vmexit(void);
 
 #define vmx_insn_failed(fmt...)		\
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 556c52407202..3df001f114be 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -11472,6 +11472,11 @@ int kvm_handle_invpcid(struct kvm_vcpu *vcpu, unsigned long type, gva_t gva)
 }
 EXPORT_SYMBOL_GPL(kvm_handle_invpcid);
 
+void kvm_arch_vcpu_stat_reset(struct kvm_vcpu_stat *vcpu_stat)
+{
+        vcpu_stat->st_max = 0;
+}
+
 EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_exit);
 EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_fast_mmio);
 EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_inj_virq);
-- 
2.34.1

