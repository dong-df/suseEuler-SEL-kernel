From 038f88f976cc8bcab644ed02a56afa29db8e3c46 Mon Sep 17 00:00:00 2001
From: Lijun Fang <fanglijun3@huawei.com>
Date: Fri, 3 Dec 2021 18:15:31 +0800
Subject: [PATCH] svm: driver probe to read l2buff addr
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 038f88f976cc8bcab644ed02a56afa29db8e3c46


ascend inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4JMM0
CVE: NA

--------

svm probe to read l2buff addr and size, this is rts
to set l2buff

Signed-off-by: Lijun Fang <fanglijun3@huawei.com>
Reviewed-by: Weilong Chen <chenweilong@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 drivers/char/svm.c | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/drivers/char/svm.c b/drivers/char/svm.c
index ff66c7b9709c..a430062f76e4 100644
--- a/drivers/char/svm.c
+++ b/drivers/char/svm.c
@@ -803,6 +803,27 @@ int svm_get_pasid(pid_t vpid, int dev_id __maybe_unused)
 }
 EXPORT_SYMBOL_GPL(svm_get_pasid);
 
+static int svm_dt_setup_l2buff(struct svm_device *sdev, struct device_node *np)
+{
+	struct device_node *l2buff = of_parse_phandle(np, "memory-region", 0);
+
+	if (l2buff) {
+		struct resource r;
+		int err = of_address_to_resource(l2buff, 0, &r);
+
+		if (err) {
+			of_node_put(l2buff);
+			return err;
+		}
+
+		sdev->l2buff = r.start;
+		sdev->l2size = resource_size(&r);
+	}
+
+	of_node_put(l2buff);
+	return 0;
+}
+
 static int svm_device_probe(struct platform_device *pdev)
 {
 	int err = -1;
@@ -864,6 +885,14 @@ static int svm_device_probe(struct platform_device *pdev)
 			goto err_unregister_misc;
 		}
 	} else {
+		/*
+		 * Get the l2buff phys address and size, if it do not exist
+		 * just warn and continue, and runtime can not use L2BUFF.
+		 */
+		err = svm_dt_setup_l2buff(sdev, np);
+		if (err)
+			dev_warn(dev, "Cannot get l2buff\n");
+
 		err = svm_dt_init_core(sdev, np);
 		if (err) {
 			dev_err(dev, "failed to init dt cores\n");
-- 
2.26.2

