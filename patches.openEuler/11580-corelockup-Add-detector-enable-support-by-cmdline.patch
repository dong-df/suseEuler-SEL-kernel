From 3cd0ed4c4d676a099051b612335edfd5375e12c9 Mon Sep 17 00:00:00 2001
From: Dong Kai <dongkai11@huawei.com>
Date: Fri, 26 Nov 2021 16:27:11 +0800
Subject: [PATCH] corelockup: Add detector enable support by cmdline
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 3cd0ed4c4d676a099051b612335edfd5375e12c9


ascend inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4F3V1
CVE: NA

--------------------------------

Add cmdline params "enable_corelockup_detector" to support enable
core suspend detector. And enable defaultly within ascend features.

Signed-off-by: Dong Kai <dongkai11@huawei.com>
Reviewed-by: Kuohai Xu <xukuohai@huawei.com>
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Reviewed-by: Ding Tianhong <dingtianhong@huawei.com>
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Reviewed-by: Ding Tianhong <dingtianhong@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 include/linux/nmi.h   |  1 +
 kernel/watchdog.c     | 12 ++++++++----
 kernel/watchdog_hld.c | 18 ++++++++++++++----
 3 files changed, 23 insertions(+), 8 deletions(-)

diff --git a/include/linux/nmi.h b/include/linux/nmi.h
index 12570dadd5e9..6f13b1d7d61b 100644
--- a/include/linux/nmi.h
+++ b/include/linux/nmi.h
@@ -131,6 +131,7 @@ extern void corelockup_detector_online_cpu(unsigned int cpu);
 extern void corelockup_detector_offline_cpu(unsigned int cpu);
 extern void watchdog_check_hrtimer(void);
 extern unsigned long watchdog_hrtimer_interrupts(unsigned int cpu);
+extern bool enable_corelockup_detector;
 #endif
 
 void watchdog_nmi_stop(void);
diff --git a/kernel/watchdog.c b/kernel/watchdog.c
index 4fb4be9a1d0b..b5011d0a1174 100644
--- a/kernel/watchdog.c
+++ b/kernel/watchdog.c
@@ -366,7 +366,8 @@ static enum hrtimer_restart watchdog_timer_fn(struct hrtimer *hrtimer)
 
 #ifdef CONFIG_CORELOCKUP_DETECTOR
 	/* check hrtimer of detector cpu */
-	watchdog_check_hrtimer();
+	if (enable_corelockup_detector)
+		watchdog_check_hrtimer();
 #endif
 
 	/* kick the hardlockup detector */
@@ -531,7 +532,8 @@ int lockup_detector_online_cpu(unsigned int cpu)
 	if (cpumask_test_cpu(cpu, &watchdog_allowed_mask)) {
 		watchdog_enable(cpu);
 #ifdef CONFIG_CORELOCKUP_DETECTOR
-		corelockup_detector_online_cpu(cpu);
+		if (enable_corelockup_detector)
+			corelockup_detector_online_cpu(cpu);
 #endif
 	}
 	return 0;
@@ -542,7 +544,8 @@ int lockup_detector_offline_cpu(unsigned int cpu)
 	if (cpumask_test_cpu(cpu, &watchdog_allowed_mask)) {
 		watchdog_disable(cpu);
 #ifdef CONFIG_CORELOCKUP_DETECTOR
-		corelockup_detector_offline_cpu(cpu);
+		if (enable_corelockup_detector)
+			corelockup_detector_offline_cpu(cpu);
 #endif
 	}
 	return 0;
@@ -775,6 +778,7 @@ void __init lockup_detector_init(void)
 		nmi_watchdog_available = true;
 	lockup_detector_setup();
 #ifdef CONFIG_CORELOCKUP_DETECTOR
-	corelockup_detector_init();
+	if (enable_corelockup_detector)
+		corelockup_detector_init();
 #endif
 }
diff --git a/kernel/watchdog_hld.c b/kernel/watchdog_hld.c
index 5e58293e241a..665358df5172 100644
--- a/kernel/watchdog_hld.c
+++ b/kernel/watchdog_hld.c
@@ -93,6 +93,14 @@ static DEFINE_PER_CPU(unsigned long, hrint_missed);
 struct cpumask corelockup_cpumask __read_mostly;
 unsigned int close_wfi_wfe;
 static bool pmu_based_nmi;
+bool enable_corelockup_detector;
+
+static int __init enable_corelockup_detector_setup(char *str)
+{
+	enable_corelockup_detector = true;
+	return 1;
+}
+__setup("enable_corelockup_detector", enable_corelockup_detector_setup);
 
 static void watchdog_nmi_interrupts(void)
 {
@@ -326,11 +334,13 @@ static inline bool watchdog_check_timestamp(void)
 void watchdog_hardlockup_check(struct pt_regs *regs)
 {
 #ifdef CONFIG_CORELOCKUP_DETECTOR
-	/* Kick nmi interrupts */
-	watchdog_nmi_interrupts();
+	if (enable_corelockup_detector) {
+		/* Kick nmi interrupts */
+		watchdog_nmi_interrupts();
 
-	/* corelockup check */
-	watchdog_corelockup_check(regs);
+		/* corelockup check */
+		watchdog_corelockup_check(regs);
+	}
 #endif
 
 	if (__this_cpu_read(watchdog_nmi_touch) == true) {
-- 
2.26.2

