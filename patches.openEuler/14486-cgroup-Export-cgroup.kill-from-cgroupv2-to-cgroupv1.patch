From c09fad1e8ab38c91c43e641d4009f27c2ab774dc Mon Sep 17 00:00:00 2001
From: Lu Jialin <lujialin4@huawei.com>
Date: Thu, 7 Apr 2022 16:12:58 +0800
Subject: [PATCH] cgroup: Export cgroup.kill from cgroupv2 to cgroupv1
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: c09fad1e8ab38c91c43e641d4009f27c2ab774dc
Modified-by-SEL: No


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4X0YD?from=project-issue
CVE: NA

--------

Export cgroup.kill feature from cgroupv2 to cgroupv1. Therefore, user
can kill all process in one cgroup and its subcgroups instead of kill them
one by one.

Signed-off-by: Lu Jialin <lujialin4@huawei.com>
Reviewed-by: Xiu Jianfeng <xiujianfeng@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 kernel/cgroup/cgroup-internal.h | 3 +++
 kernel/cgroup/cgroup-v1.c       | 5 +++++
 kernel/cgroup/cgroup.c          | 4 ++--
 3 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/kernel/cgroup/cgroup-internal.h b/kernel/cgroup/cgroup-internal.h
index 6e36e854b512..3f116765bb00 100644
--- a/kernel/cgroup/cgroup-internal.h
+++ b/kernel/cgroup/cgroup-internal.h
@@ -266,6 +266,9 @@ int cgroup_show_path(struct seq_file *sf, struct kernfs_node *kf_node,
 int __cgroup_task_count(const struct cgroup *cgrp);
 int cgroup_task_count(const struct cgroup *cgrp);
 
+ssize_t cgroup_kill_write(struct kernfs_open_file *of, char *buf, size_t nbytes,
+			  loff_t off);
+
 /*
  * rstat.c
  */
diff --git a/kernel/cgroup/cgroup-v1.c b/kernel/cgroup/cgroup-v1.c
index 9f5221653f80..ff965ca9ca21 100644
--- a/kernel/cgroup/cgroup-v1.c
+++ b/kernel/cgroup/cgroup-v1.c
@@ -658,6 +658,11 @@ struct cftype cgroup1_base_files[] = {
 		.write = cgroup_release_agent_write,
 		.max_write_len = PATH_MAX - 1,
 	},
+	{
+		.name = "cgroup.kill",
+		.flags = CFTYPE_NOT_ON_ROOT,
+		.write = cgroup_kill_write,
+	},
 	{ }	/* terminate */
 };
 
diff --git a/kernel/cgroup/cgroup.c b/kernel/cgroup/cgroup.c
index 7dd4e18405b5..87cd2bb75307 100644
--- a/kernel/cgroup/cgroup.c
+++ b/kernel/cgroup/cgroup.c
@@ -3808,8 +3808,8 @@ static void cgroup_kill(struct cgroup *cgrp)
 		__cgroup_kill(dsct);
 }
 
-static ssize_t cgroup_kill_write(struct kernfs_open_file *of, char *buf,
-				 size_t nbytes, loff_t off)
+ssize_t cgroup_kill_write(struct kernfs_open_file *of, char *buf, size_t nbytes,
+			  loff_t off)
 {
 	ssize_t ret = 0;
 	int kill;
-- 
2.26.2

