From 14f70b7a0aeef0262b24d196c3f04fd27917d8c9 Mon Sep 17 00:00:00 2001
From: Zheng Zengkai <zhengzengkai@huawei.com>
Date: Fri, 31 Dec 2021 15:59:41 +0800
Subject: [PATCH] KABI: add KABI padding to cpuidle structures
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 14f70b7a0aeef0262b24d196c3f04fd27917d8c9


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4JBL0
CVE: NA

------------------------------

Add KABI padding to the following cpuidle structures:
struct cpuidle_state_usage
struct cpuidle_state
struct cpuidle_device
struct cpuidle_driver

Changes in these structures will influence KABI compatibility
of following interfaces:
sched_setscheduler
set_cpus_allowed_ptr
set_user_nice
wake_up_process

Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Reviewed-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Reviewed-by: Cheng Jian <cj.chengjian@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 include/linux/cpuidle.h | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/include/linux/cpuidle.h b/include/linux/cpuidle.h
index bd605b5585cf..12a94f3a957c 100644
--- a/include/linux/cpuidle.h
+++ b/include/linux/cpuidle.h
@@ -14,6 +14,7 @@
 #include <linux/percpu.h>
 #include <linux/list.h>
 #include <linux/hrtimer.h>
+#include <linux/kabi.h>
 
 #define CPUIDLE_STATE_MAX	10
 #define CPUIDLE_NAME_LEN	16
@@ -43,6 +44,10 @@ struct cpuidle_state_usage {
 	unsigned long long	s2idle_usage;
 	unsigned long long	s2idle_time; /* in US */
 #endif
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
+	KABI_RESERVE(3)
+	KABI_RESERVE(4)
 };
 
 struct cpuidle_state {
@@ -73,6 +78,10 @@ struct cpuidle_state {
 	int (*enter_s2idle)(struct cpuidle_device *dev,
 			    struct cpuidle_driver *drv,
 			    int index);
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
+	KABI_RESERVE(3)
+	KABI_RESERVE(4)
 };
 
 /* Idle State Flags */
@@ -110,6 +119,10 @@ struct cpuidle_device {
 	cpumask_t		coupled_cpus;
 	struct cpuidle_coupled	*coupled;
 #endif
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
+	KABI_RESERVE(3)
+	KABI_RESERVE(4)
 };
 
 DECLARE_PER_CPU(struct cpuidle_device *, cpuidle_devices);
@@ -135,6 +148,8 @@ struct cpuidle_driver {
 
 	/* preferred governor to switch at register time */
 	const char		*governor;
+	KABI_RESERVE(1)
+	KABI_RESERVE(2)
 };
 
 #ifdef CONFIG_CPU_IDLE
-- 
2.26.2

