From d332bb38150d7be61e3950d50391fc3f8be3ba30 Mon Sep 17 00:00:00 2001
From: Zheng Zengkai <zhengzengkai@huawei.com>
Date: Thu, 6 Jan 2022 17:22:03 +0800
Subject: [PATCH] KABI: Add CONFIG_KABI_RESERVE to control KABI padding reserve
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: d332bb38150d7be61e3950d50391fc3f8be3ba30


hulk inclusion
category: feature
bugzilla: https://gitee.com/openeuler/kernel/issues/I4K3S5

-----------------------

Add CONFIG_KABI_RESERVE to control KABI padding reserve or not,
for some embedded system, KABI padding reserve may be not necessary.

By the way, adjust unsigned long to u64 to unify basic reserve
length for both 32bit and 64bit architectures.

Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Reviewed-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 Kconfig              | 8 ++++++++
 include/linux/kabi.h | 6 +++++-
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/Kconfig b/Kconfig
index bb409bb587b0..9c9b5fedd43c 100644
--- a/Kconfig
+++ b/Kconfig
@@ -37,3 +37,11 @@ config KABI_SIZE_ALIGN_CHECKS
 	help
 	  This option enables more stringent kabi checks. Those must be disable
 	  in case of a debug-build because they allow to change struct sizes.
+
+config KABI_RESERVE
+	bool "Enable KABI PADDING RESERVE"
+	default y
+	help
+	  This option enables KABI padding reserve.
+	  For some embedded system, KABI padding reserve may be not necessary.
+	  Disable it on demand.
diff --git a/include/linux/kabi.h b/include/linux/kabi.h
index da5e6d71e66b..713f63cf56cb 100644
--- a/include/linux/kabi.h
+++ b/include/linux/kabi.h
@@ -425,7 +425,11 @@
  * leverage those common names making it easier to read and find in the
  * code.
  */
-# define _KABI_RESERVE(n)		unsigned long kabi_reserved##n
+#ifdef CONFIG_KABI_RESERVE
+	# define _KABI_RESERVE(n)		u64 kabi_reserved##n
+#else
+	# define _KABI_RESERVE(n)
+#endif
 # define KABI_RESERVE(n)		_KABI_RESERVE(n);
 /*
  * Simple wrappers to replace standard openEuler reserved elements.
-- 
2.26.2

