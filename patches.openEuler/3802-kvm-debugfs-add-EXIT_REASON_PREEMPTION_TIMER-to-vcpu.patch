From 3beedef89f4a0ff00e7b0f3e7adcee1d34b98bb0 Mon Sep 17 00:00:00 2001
From: chenjiajun <chenjiajun8@huawei.com>
Date: Wed, 7 Apr 2021 15:11:46 +0800
Subject: [PATCH] kvm: debugfs: add EXIT_REASON_PREEMPTION_TIMER to vcpu_stat
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 3beedef89f4a0ff00e7b0f3e7adcee1d34b98bb0
Modified-by-SEL: Yes, refreshed due to different context


virt inclusion
category: feature
bugzilla: 46853
CVE: NA

Export EXIT_REASON_PREEMPTION_TIMER kvm exits to vcpu_stat debugfs.
Add a new column to vcpu_stat, and provide preemption_timer status to
virtualization detection tools.

Signed-off-by: chenjiajun <chenjiajun8@huawei.com>
Reviewed-by: Xiangyou Xie <xiexiangyou@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/x86/include/asm/kvm_host.h |    1 +
 arch/x86/kvm/vmx/vmx.c          |    2 ++
 arch/x86/kvm/x86.c              |    1 +
 3 files changed, 4 insertions(+)

--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1103,6 +1103,7 @@ struct kvm_vcpu_stat {
 	u64 gtime;
 	u64 preemption_reported;
 	u64 preemption_other;
+	u64 preemption_timer_exits;
 	u64 halt_poll_success_ns;
 	u64 halt_poll_fail_ns;
 	u64 notify_window_exits;
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -5852,6 +5852,7 @@ static fastpath_t handle_fastpath_preemp
 
 static int handle_preemption_timer(struct kvm_vcpu *vcpu)
 {
+	++vcpu->stat.preemption_timer_exits;
 	handle_fastpath_preemption_timer(vcpu);
 	return 1;
 }
@@ -6929,6 +6930,7 @@ static fastpath_t vmx_exit_handlers_fast
 		++vcpu->stat.msr_wr_exits;
 		return handle_fastpath_set_msr_irqoff(vcpu);
 	case EXIT_REASON_PREEMPTION_TIMER:
+		++vcpu->stat.preemption_timer_exits;
 		return handle_fastpath_preemption_timer(vcpu);
 	default:
 		return EXIT_FASTPATH_NONE;
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -294,6 +294,7 @@ struct dfx_kvm_stats_debugfs_item dfx_de
 	DFX_STAT("utime", utime),
 	DFX_STAT("stime", stime),
 	DFX_STAT("gtime", gtime),
+	DFX_STAT("preemption_timer_exits", preemption_timer_exits),
 	{ NULL }
 };
 
