From 1bb559706170b1311d7ad621d5a4d02cb228c778 Mon Sep 17 00:00:00 2001
From: Wei Li <liwei391@huawei.com>
Date: Sat, 28 May 2022 12:04:14 +0800
Subject: [PATCH] arm64: Fix wrong logic in gic_arch_restore_irqs()
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 1bb559706170b1311d7ad621d5a4d02cb228c778
Modified-by-SEL: No


hulk inclusion
category: bugfix
bugzilla: 186819 https://gitee.com/openeuler/kernel/issues/I58L00

--------------------------------

The gic_arch_restore_irqs() depends on commit e7e6a881f797 ("arm64:
irqflags: fix incomplete save & restore"). While it is reverted in commit
2e680920c2e7 ("Revert "arm64: irqflags: fix incomplete save & restore""),
we should update the logic here too.

Currently the upper 32 bits of 'flags' is always zero, change to use
'GIC_PRIO_PSR_I_SET' to indicate the interrupt enabling status.

Fixes: abde6b940f5a ("stop_machine: mask pseudo nmi before running the callback")
Signed-off-by: Wei Li <liwei391@huawei.com>
Reviewed-by: Cheng Jian <cj.chengjian@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 arch/arm64/include/asm/arch_gicv3.h | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/arch/arm64/include/asm/arch_gicv3.h b/arch/arm64/include/asm/arch_gicv3.h
index 12aced900ada..80714a8589a0 100644
--- a/arch/arm64/include/asm/arch_gicv3.h
+++ b/arch/arm64/include/asm/arch_gicv3.h
@@ -191,9 +191,8 @@ static inline void gic_arch_disable_irqs(void)
 
 static inline void gic_arch_restore_irqs(unsigned long flags)
 {
-	if (gic_supports_nmi())
-		asm volatile ("msr	daif, %0" : : "r" (flags >> 32)
-					: "memory");
+	if (gic_supports_nmi() && !(flags & GIC_PRIO_PSR_I_SET))
+		gic_arch_enable_irqs();
 }
 #endif /* __ASSEMBLY__ */
 #endif /* __ASM_ARCH_GICV3_H */
-- 
2.34.1

