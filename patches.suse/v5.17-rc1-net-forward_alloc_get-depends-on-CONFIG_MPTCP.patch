From 6c302e799a0d4be1362f505453b714fe05d91f2a Mon Sep 17 00:00:00 2001
Message-Id: <6c302e799a0d4be1362f505453b714fe05d91f2a.1646721060.git.geliang.tang@suse.com>
In-Reply-To: <d519f350967a60b85a574ad8aeac43f2b4384746.1646721060.git.geliang.tang@suse.com>
References: <d519f350967a60b85a574ad8aeac43f2b4384746.1646721060.git.geliang.tang@suse.com>
From: Eric Dumazet <edumazet@google.com>
Date: Mon, 15 Nov 2021 11:02:38 -0800
Subject: [PATCH 09/20] net: forward_alloc_get depends on CONFIG_MPTCP
Git-commit: 6c302e799a0d4be1362f505453b714fe05d91f2a
Patch-mainline: v5.17-rc1
References: bsn#131
Modified-by-SEL: No

(struct proto)->sk_forward_alloc is currently only used by MPTCP.

Signed-off-by: Eric Dumazet <edumazet@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 include/net/sock.h |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -1189,7 +1189,9 @@ struct proto {
 	unsigned int		inuse_idx;
 #endif
 
+#if IS_ENABLED(CONFIG_MPTCP)
 	int			(*forward_alloc_get)(const struct sock *sk);
+#endif
 
 	bool			(*stream_memory_free)(const struct sock *sk, int wake);
 	bool			(*stream_memory_read)(const struct sock *sk);
@@ -1276,10 +1278,11 @@ static inline void sk_refcnt_debug_relea
 
 static inline int sk_forward_alloc_get(const struct sock *sk)
 {
-	if (!sk->sk_prot->forward_alloc_get)
-		return sk->sk_forward_alloc;
-
-	return sk->sk_prot->forward_alloc_get(sk);
+#if IS_ENABLED(CONFIG_MPTCP)
+	if (sk->sk_prot->forward_alloc_get)
+		return sk->sk_prot->forward_alloc_get(sk);
+#endif
+	return sk->sk_forward_alloc;
 }
 
 static inline bool __sk_stream_memory_free(const struct sock *sk, int wake)
