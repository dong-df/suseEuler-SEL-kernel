From a61daaf351da7c8493f2586437617d60c24350b0 Mon Sep 17 00:00:00 2001
Message-Id: <a61daaf351da7c8493f2586437617d60c24350b0.1648737454.git.geliang.tang@suse.com>
From: Jonathan Lemon <bsd@fb.com>
Date: Fri, 18 Dec 2020 10:50:31 -0800
Subject: [PATCH] bpf: Use thread_group_leader()
Git-commit: a61daaf351da7c8493f2586437617d60c24350b0
Patch-mainline: v5.11-rc3
References: bsn#127
Modified-by-SEL: No


Instead of directly comparing task->tgid and task->pid, use the
thread_group_leader() helper.  This helps with readability, and
there should be no functional change.

Signed-off-by: Jonathan Lemon <jonathan.lemon@gmail.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20201218185032.2464558-3-jonathan.lemon@gmail.com
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 kernel/bpf/task_iter.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/bpf/task_iter.c b/kernel/bpf/task_iter.c
index 8033ab19138a..dc4007f1843b 100644
--- a/kernel/bpf/task_iter.c
+++ b/kernel/bpf/task_iter.c
@@ -37,7 +37,7 @@ static struct task_struct *task_seq_get_next(struct pid_namespace *ns,
 		if (!task) {
 			++*tid;
 			goto retry;
-		} else if (skip_if_dup_files && task->tgid != task->pid &&
+		} else if (skip_if_dup_files && !thread_group_leader(task) &&
 			   task->files == task->group_leader->files) {
 			put_task_struct(task);
 			task = NULL;
-- 
2.34.1

