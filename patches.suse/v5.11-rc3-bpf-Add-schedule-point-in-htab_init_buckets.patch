From e7e518053c267bb6be3799520d9f4a34c7264a2e Mon Sep 17 00:00:00 2001
Message-Id: <e7e518053c267bb6be3799520d9f4a34c7264a2e.1648737476.git.geliang.tang@suse.com>
From: Eric Dumazet <edumazet@google.com>
Date: Mon, 21 Dec 2020 11:25:06 -0800
Subject: [PATCH] bpf: Add schedule point in htab_init_buckets()
Git-commit: e7e518053c267bb6be3799520d9f4a34c7264a2e
Patch-mainline: v5.11-rc3
References: bsn#127
Modified-by-SEL: No


We noticed that with a LOCKDEP enabled kernel,
allocating a hash table with 65536 buckets would
use more than 60ms.

htab_init_buckets() runs from process context,
it is safe to schedule to avoid latency spikes.

Fixes: c50eb518e262 ("bpf: Use separate lockdep class for each hashtab")
Reported-by: John Sperbeck <jsperbeck@google.com>
Signed-off-by: Eric Dumazet <edumazet@google.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Song Liu <songliubraving@fb.com>
Link: https://lore.kernel.org/bpf/20201221192506.707584-1-eric.dumazet@gmail.com
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 kernel/bpf/hashtab.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/kernel/bpf/hashtab.c b/kernel/bpf/hashtab.c
index 7e848200cd26..c1ac7f964bc9 100644
--- a/kernel/bpf/hashtab.c
+++ b/kernel/bpf/hashtab.c
@@ -152,6 +152,7 @@ static void htab_init_buckets(struct bpf_htab *htab)
 			lockdep_set_class(&htab->buckets[i].lock,
 					  &htab->lockdep_key);
 		}
+		cond_resched();
 	}
 }
 
-- 
2.34.1

