From 08a6f22ef6f843d0ea7252087787b5ab04610bec Mon Sep 17 00:00:00 2001
Message-Id: <08a6f22ef6f843d0ea7252087787b5ab04610bec.1650801452.git.geliang.tang@suse.com>
From: Matt Smith <alastorze@fb.com>
Date: Wed, 1 Sep 2021 12:44:37 -0700
Subject: [PATCH] libbpf: Change bpf_object_skeleton data field to const
 pointer
Git-commit: 08a6f22ef6f843d0ea7252087787b5ab04610bec
Patch-mainline: v5.16-rc1
References: bsn#127
Modified-by-SEL: No


This change was necessary to enforce the implied contract
that bpf_object_skeleton->data should not be mutated.  The data
will be cast to `void *` during assignment to handle the case
where a user is compiling with older libbpf headers to avoid
a compiler warning of `const void *` data being cast to `void *`

Signed-off-by: Matt Smith <alastorze@fb.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20210901194439.3853238-2-alastorze@fb.com
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 tools/lib/bpf/libbpf.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/tools/lib/bpf/libbpf.h b/tools/lib/bpf/libbpf.h
index f177d897c5f7..2f6f0e15d1e7 100644
--- a/tools/lib/bpf/libbpf.h
+++ b/tools/lib/bpf/libbpf.h
@@ -854,7 +854,7 @@ struct bpf_object_skeleton {
 	size_t sz; /* size of this struct, for forward/backward compatibility */
 
 	const char *name;
-	void *data;
+	const void *data;
 	size_t data_sz;
 
 	struct bpf_object **obj;
-- 
2.26.2

