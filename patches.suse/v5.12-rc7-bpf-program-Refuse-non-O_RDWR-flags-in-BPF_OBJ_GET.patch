From d37300ed182131f1757895a62e556332857417e5 Mon Sep 17 00:00:00 2001
Message-Id: <d37300ed182131f1757895a62e556332857417e5.1648734662.git.geliang.tang@suse.com>
From: Lorenz Bauer <lmb@cloudflare.com>
Date: Fri, 26 Mar 2021 16:05:01 +0000
Subject: [PATCH] bpf: program: Refuse non-O_RDWR flags in BPF_OBJ_GET
Git-commit: d37300ed182131f1757895a62e556332857417e5
Patch-mainline: v5.12-rc7
References: bsn#127
Modified-by-SEL: No


As for bpf_link, refuse creating a non-O_RDWR fd. Since program fds
currently don't allow modifications this is a precaution, not a
straight up bug fix.

Signed-off-by: Lorenz Bauer <lmb@cloudflare.com>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Acked-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20210326160501.46234-2-lmb@cloudflare.com
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 kernel/bpf/inode.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/bpf/inode.c b/kernel/bpf/inode.c
index dc56237d6960..d2de2abec35b 100644
--- a/kernel/bpf/inode.c
+++ b/kernel/bpf/inode.c
@@ -543,7 +543,7 @@ int bpf_obj_get_user(const char __user *pathname, int flags)
 		return PTR_ERR(raw);
 
 	if (type == BPF_TYPE_PROG)
-		ret = bpf_prog_new_fd(raw);
+		ret = (f_flags != O_RDWR) ? -EINVAL : bpf_prog_new_fd(raw);
 	else if (type == BPF_TYPE_MAP)
 		ret = bpf_map_new_fd(raw, f_flags);
 	else if (type == BPF_TYPE_LINK)
-- 
2.34.1

