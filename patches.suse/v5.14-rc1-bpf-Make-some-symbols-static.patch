From 3a2daa7248647c0e5e165140553f9af5006e93a2 Mon Sep 17 00:00:00 2001
Message-Id: <3a2daa7248647c0e5e165140553f9af5006e93a2.1648734115.git.geliang.tang@suse.com>
From: Pu Lehui <pulehui@huawei.com>
Date: Wed, 19 May 2021 14:41:16 +0800
Subject: [PATCH] bpf: Make some symbols static
Git-commit: 3a2daa7248647c0e5e165140553f9af5006e93a2
Patch-mainline: v5.14-rc1
References: bsn#127
Modified-by-SEL: Yes, refreshed due to different context


The sparse tool complains as follows:

kernel/bpf/syscall.c:4567:29: warning:
 symbol 'bpf_sys_bpf_proto' was not declared. Should it be static?
kernel/bpf/syscall.c:4592:29: warning:
 symbol 'bpf_sys_close_proto' was not declared. Should it be static?

This symbol is not used outside of syscall.c, so marks it static.

Signed-off-by: Pu Lehui <pulehui@huawei.com>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Acked-by: Song Liu <songliubraving@fb.com>
Link: https://lore.kernel.org/bpf/20210519064116.240536-1-pulehui@huawei.com
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 kernel/bpf/syscall.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/kernel/bpf/syscall.c
+++ b/kernel/bpf/syscall.c
@@ -4585,7 +4585,7 @@ BPF_CALL_3(bpf_sys_bpf, int, cmd, void *
 	return __sys_bpf(cmd, KERNEL_BPFPTR(attr), attr_size);
 }
 
-const struct bpf_func_proto bpf_sys_bpf_proto = {
+static const struct bpf_func_proto bpf_sys_bpf_proto = {
 	.func		= bpf_sys_bpf,
 	.gpl_only	= false,
 	.ret_type	= RET_INTEGER,
@@ -4610,7 +4610,7 @@ BPF_CALL_1(bpf_sys_close, u32, fd)
 	return close_fd(fd);
 }
 
-const struct bpf_func_proto bpf_sys_close_proto = {
+static const struct bpf_func_proto bpf_sys_close_proto = {
 	.func		= bpf_sys_close,
 	.gpl_only	= false,
 	.ret_type	= RET_INTEGER,
