From 42a382a466a967dc053c73b969cd2ac2fec502cf Mon Sep 17 00:00:00 2001
Message-Id: <42a382a466a967dc053c73b969cd2ac2fec502cf.1649663224.git.geliang.tang@suse.com>
From: Ilya Leoshkevich <iii@linux.ibm.com>
Date: Sat, 27 Feb 2021 06:17:26 +0100
Subject: [PATCH] selftests/bpf: Use the last page in test_snprintf_btf on s390
Git-commit: 42a382a466a967dc053c73b969cd2ac2fec502cf
Patch-mainline: v5.12-rc3
References: bsn#127
Modified-by-SEL: No


test_snprintf_btf fails on s390, because NULL points to a readable
struct lowcore there. Fix by using the last page instead.

Error message example:

    printing fffffffffffff000 should generate error, got (361)

Fixes: 076a95f5aff2 ("selftests/bpf: Add bpf_snprintf_btf helper tests")
Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Heiko Carstens <hca@linux.ibm.com>
Acked-by: Yonghong Song <yhs@fb.com>
Link: https://lore.kernel.org/bpf/20210227051726.121256-1-iii@linux.ibm.com
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 tools/testing/selftests/bpf/progs/netif_receive_skb.c |    7 +++++++
 1 file changed, 7 insertions(+)

--- a/tools/testing/selftests/bpf/progs/netif_receive_skb.c
+++ b/tools/testing/selftests/bpf/progs/netif_receive_skb.c
@@ -23,6 +23,13 @@ bool skip = false;
 #define BADPTR			0
 #endif
 
+#if defined(bpf_target_s390)
+/* NULL points to a readable struct lowcore on s390, so take the last page */
+#define BADPTR			((void *)0xFFFFFFFFFFFFF000ULL)
+#else
+#define BADPTR			0
+#endif
+
 #ifndef ARRAY_SIZE
 #define ARRAY_SIZE(x)	(sizeof(x) / sizeof((x)[0]))
 #endif
