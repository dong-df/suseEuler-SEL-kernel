From 0205e9de42911404902728911b03fc1469242419 Mon Sep 17 00:00:00 2001
Message-Id: <0205e9de42911404902728911b03fc1469242419.1649662848.git.geliang.tang@suse.com>
From: Pedro Tammela <pctammela@gmail.com>
Date: Sun, 14 Mar 2021 18:38:38 +0100
Subject: [PATCH] libbpf: Avoid inline hint definition from 'linux/stddef.h'
Git-commit: 0205e9de42911404902728911b03fc1469242419
Patch-mainline: v5.13-rc1
References: bsn#127
Modified-by-SEL: No


Linux headers might pull 'linux/stddef.h' which defines
'__always_inline' as the following:

   #ifndef __always_inline
   #define __always_inline inline
   #endif

This becomes an issue if the program picks up the 'linux/stddef.h'
definition as the macro now just hints inline to clang.

This change now enforces the proper definition for BPF programs
regardless of the include order.

Signed-off-by: Pedro Tammela <pctammela@gmail.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20210314173839.457768-1-pctammela@gmail.com
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 tools/lib/bpf/bpf_helpers.h | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/tools/lib/bpf/bpf_helpers.h b/tools/lib/bpf/bpf_helpers.h
index ae6c975e0b87..53ff81c49dbd 100644
--- a/tools/lib/bpf/bpf_helpers.h
+++ b/tools/lib/bpf/bpf_helpers.h
@@ -29,9 +29,10 @@
  */
 #define SEC(NAME) __attribute__((section(NAME), used))
 
-#ifndef __always_inline
+/* Avoid 'linux/stddef.h' definition of '__always_inline'. */
+#undef __always_inline
 #define __always_inline inline __attribute__((always_inline))
-#endif
+
 #ifndef __noinline
 #define __noinline __attribute__((noinline))
 #endif
-- 
2.34.1

