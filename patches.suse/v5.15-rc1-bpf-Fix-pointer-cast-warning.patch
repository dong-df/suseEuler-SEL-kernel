From 16c5900ba776c5acd6568abd60c40f948a96e496 Mon Sep 17 00:00:00 2001
Message-Id: <16c5900ba776c5acd6568abd60c40f948a96e496.1651196605.git.geliang.tang@suse.com>
From: Arnd Bergmann <arnd@arndb.de>
Date: Wed, 21 Jul 2021 23:19:45 +0200
Subject: [PATCH] bpf: Fix pointer cast warning
Git-commit: 16c5900ba776c5acd6568abd60c40f948a96e496
Patch-mainline: v5.15-rc1
References: bsn#210
Modified-by-SEL: No

kp->addr is a pointer, so it cannot be cast directly to a 'u64'
when it gets interpreted as an integer value:

kernel/trace/bpf_trace.c: In function '____bpf_get_func_ip_kprobe':
kernel/trace/bpf_trace.c:968:21: error: cast from pointer to integer of different size [-Werror=pointer-to-int-cast]
  968 |         return kp ? (u64) kp->addr : 0;

Use the uintptr_t type instead.

Fixes: 9ffd9f3ff719 ("bpf: Add bpf_get_func_ip helper for kprobe programs")
Signed-off-by: Arnd Bergmann <arnd@arndb.de>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20210721212007.3876595-1-arnd@kernel.org
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 kernel/trace/bpf_trace.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/trace/bpf_trace.c b/kernel/trace/bpf_trace.c
index 08906007306d..1f22ce1fa971 100644
--- a/kernel/trace/bpf_trace.c
+++ b/kernel/trace/bpf_trace.c
@@ -965,7 +965,7 @@ BPF_CALL_1(bpf_get_func_ip_kprobe, struct pt_regs *, regs)
 {
 	struct kprobe *kp = kprobe_running();
 
-	return kp ? (u64) kp->addr : 0;
+	return kp ? (uintptr_t)kp->addr : 0;
 }
 
 static const struct bpf_func_proto bpf_get_func_ip_proto_kprobe = {
-- 
2.34.1

