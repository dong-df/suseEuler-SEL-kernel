From: Jun Yang <jun.yang@suse.com>
Date: Thu, 10 Feb 2022 18:02:29 +0800
Subject: [PATCH] netswift: fix compile issue of txgbe_main.c
Patch-mainline: Never, fixes out-of-tree driver
References: bsn#92
Modified-by-SEL: N/A

commit 30bfce109420912f201d4f295f9130ff44f04b41
(net: remove ndo_udp_tunnel_* callbacks)
remvoe ndo_upd_tunnel_add and nod_upd_tunnel_del.

This patch remove ndo_udp_tunnel_* in netswift driver
to fix compile issue follow above commit.

Signed-off-by: Jun Yang <jun.yang@suse.com>
---
 drivers/net/ethernet/netswift/txgbe/txgbe_main.c |  102 -----------------------
 1 file changed, 102 deletions(-)

--- a/drivers/net/ethernet/netswift/txgbe/txgbe_main.c
+++ b/drivers/net/ethernet/netswift/txgbe/txgbe_main.c
@@ -7306,106 +7306,6 @@ static int txgbe_set_features(struct net
 	return 0;
 }
 
-/**
- * txgbe_add_udp_tunnel_port - Get notifications about adding UDP tunnel ports
- * @dev: The port's netdev
- * @ti: Tunnel endpoint information
- **/
-static void txgbe_add_udp_tunnel_port(struct net_device *dev,
-				      struct udp_tunnel_info *ti)
-{
-	struct txgbe_adapter *adapter = netdev_priv(dev);
-	struct txgbe_hw *hw = &adapter->hw;
-	__be16 port = ntohs(ti->port);
-
-	if (ti->sa_family != AF_INET)
-		return;
-
-	switch (ti->type) {
-	case UDP_TUNNEL_TYPE_VXLAN:
-		if (!(adapter->flags & TXGBE_FLAG_VXLAN_OFFLOAD_CAPABLE))
-			return;
-
-		if (adapter->vxlan_port == port)
-			return;
-
-		if (adapter->vxlan_port) {
-			netdev_info(dev,
-				    "VXLAN port %d set, not adding port %d\n",
-				    ntohs(adapter->vxlan_port),
-				    ntohs(port));
-			return;
-		}
-
-		adapter->vxlan_port = port;
-		wr32(hw, TXGBE_CFG_VXLAN, port);
-		break;
-	case UDP_TUNNEL_TYPE_GENEVE:
-		if (adapter->geneve_port == port)
-			return;
-
-		if (adapter->geneve_port) {
-			netdev_info(dev,
-				    "GENEVE port %d set, not adding port %d\n",
-				    ntohs(adapter->geneve_port),
-				    ntohs(port));
-			return;
-		}
-
-		adapter->geneve_port = port;
-		wr32(hw, TXGBE_CFG_GENEVE, port);
-		break;
-	default:
-		return;
-	}
-}
-
-/**
- * ixgbe_del_udp_tunnel_port - Get notifications about removing UDP tunnel ports
- * @dev: The port's netdev
- * @ti: Tunnel endpoint information
- **/
-static void txgbe_del_udp_tunnel_port(struct net_device *dev,
-				      struct udp_tunnel_info *ti)
-{
-	struct txgbe_adapter *adapter = netdev_priv(dev);
-
-	if (ti->type != UDP_TUNNEL_TYPE_VXLAN &&
-	    ti->type != UDP_TUNNEL_TYPE_GENEVE)
-		return;
-
-	if (ti->sa_family != AF_INET)
-		return;
-
-	switch (ti->type) {
-	case UDP_TUNNEL_TYPE_VXLAN:
-		if (!(adapter->flags & TXGBE_FLAG_VXLAN_OFFLOAD_CAPABLE))
-			return;
-
-		if (adapter->vxlan_port != ti->port) {
-			netdev_info(dev, "VXLAN port %d not found\n",
-				    ntohs(ti->port));
-			return;
-		}
-
-		txgbe_clear_vxlan_port(adapter);
-		adapter->flags2 |= TXGBE_FLAG2_VXLAN_REREG_NEEDED;
-		break;
-	case UDP_TUNNEL_TYPE_GENEVE:
-		if (adapter->geneve_port != ti->port) {
-			netdev_info(dev, "GENEVE port %d not found\n",
-				    ntohs(ti->port));
-			return;
-		}
-
-		adapter->geneve_port = 0;
-		wr32(&adapter->hw, TXGBE_CFG_GENEVE, 0);
-		break;
-	default:
-		return;
-	}
-}
-
 static int txgbe_ndo_fdb_add(struct ndmsg *ndm, struct nlattr *tb[],
 			     struct net_device *dev,
 			     const unsigned char *addr,
@@ -7537,8 +7437,6 @@ static const struct net_device_ops txgbe
 	.ndo_fdb_add            = txgbe_ndo_fdb_add,
 	.ndo_bridge_setlink     = txgbe_ndo_bridge_setlink,
 	.ndo_bridge_getlink     = txgbe_ndo_bridge_getlink,
-	.ndo_udp_tunnel_add     = txgbe_add_udp_tunnel_port,
-	.ndo_udp_tunnel_del     = txgbe_del_udp_tunnel_port,
 	.ndo_features_check     = txgbe_features_check,
 	.ndo_set_features       = txgbe_set_features,
 	.ndo_fix_features       = txgbe_fix_features,
