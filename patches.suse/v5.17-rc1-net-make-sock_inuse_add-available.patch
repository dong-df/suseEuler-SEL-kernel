From d477eb9004845cb2dc92ad5eed79a437738a868a Mon Sep 17 00:00:00 2001
Message-Id: <d477eb9004845cb2dc92ad5eed79a437738a868a.1644479175.git.geliang.tang@suse.com>
From: Eric Dumazet <edumazet@google.com>
Date: Mon, 15 Nov 2021 09:11:48 -0800
Subject: [PATCH] net: make sock_inuse_add() available
Git-commit: d477eb9004845cb2dc92ad5eed79a437738a868a
Patch-mainline: v5.17-rc1
References: bsn#2
Modified-by-SEL: Yes, refreshed due to context changes


MPTCP hard codes it, let us instead provide this helper.

Signed-off-by: Eric Dumazet <edumazet@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 include/net/sock.h  | 10 ++++++++++
 net/core/sock.c     | 10 ----------
 net/mptcp/subflow.c |  4 +---
 3 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/include/net/sock.h b/include/net/sock.h
index 5a1e1df3cefd..c4c981a51797 100644
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -1396,6 +1396,12 @@ proto_memory_pressure(struct proto *prot
 #ifdef CONFIG_PROC_FS
 /* Called with local bh disabled */
 void sock_prot_inuse_add(struct net *net, struct proto *prot, int inc);
+
+static inline void sock_inuse_add(const struct net *net, int val)
+{
+	this_cpu_add(*net->core.sock_inuse, val);
+}
+
 int sock_prot_inuse_get(struct net *net, struct proto *proto);
 int sock_inuse_get(struct net *net);
 #else
@@ -1403,6 +1409,10 @@ static inline void sock_prot_inuse_add(s
 		int inc)
 {
 }
+
+static inline void sock_inuse_add(const struct net *net, int val)
+{
+}
 #endif
 
 
diff --git a/net/core/sock.c b/net/core/sock.c
index c0f9bdd5cf68..a9bd22b883b9 100644
--- a/net/core/sock.c
+++ b/net/core/sock.c
@@ -142,8 +142,6 @@
 static DEFINE_MUTEX(proto_list_mutex);
 static LIST_HEAD(proto_list);
 
-static void sock_inuse_add(struct net *net, int val);
-
 /**
  * sk_ns_capable - General socket capability test
  * @sk: Socket to use a capability on or through
@@ -3427,11 +3425,6 @@ int sock_prot_inuse_get(struct net *net, struct proto *prot)
 }
 EXPORT_SYMBOL_GPL(sock_prot_inuse_get);
 
-static void sock_inuse_add(struct net *net, int val)
-{
-	this_cpu_add(*net->core.sock_inuse, val);
-}
-
 int sock_inuse_get(struct net *net)
 {
 	int cpu, res = 0;
@@ -3510,9 +3503,6 @@ static inline void release_proto_idx(struct proto *prot)
 {
 }
 
-static void sock_inuse_add(struct net *net, int val)
-{
-}
 #endif
 
 static void tw_prot_cleanup(struct timewait_sock_ops *twsk_prot)
diff --git a/net/mptcp/subflow.c b/net/mptcp/subflow.c
index 6172f380dfb7..49787a1d7b34 100644
--- a/net/mptcp/subflow.c
+++ b/net/mptcp/subflow.c
@@ -1534,9 +1534,7 @@ int mptcp_subflow_create_socket(struct sock *sk, struct socket **new_sock)
 	 */
 	sf->sk->sk_net_refcnt = 1;
 	get_net(net);
-#ifdef CONFIG_PROC_FS
-	this_cpu_add(*net->core.sock_inuse, 1);
-#endif
+	sock_inuse_add(net, 1);
 	err = tcp_set_ulp(sf->sk, "mptcp");
 	release_sock(sf->sk);
 
