From 28a8add64181059034b7f281491132112cd95bb4 Mon Sep 17 00:00:00 2001
Message-Id: <28a8add64181059034b7f281491132112cd95bb4.1648737332.git.geliang.tang@suse.com>
From: Brendan Jackman <jackmanb@google.com>
Date: Tue, 12 Jan 2021 12:39:13 +0000
Subject: [PATCH] bpf: Fix a verifier message for alloc size helper arg
Git-commit: 28a8add64181059034b7f281491132112cd95bb4
Patch-mainline: v5.12-rc2
References: bsn#127
Modified-by-SEL: No


The error message here is misleading, the argument will be rejected unless
it is a known constant.

Signed-off-by: Brendan Jackman <jackmanb@google.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Yonghong Song <yhs@fb.com>
Acked-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20210112123913.2016804-1-jackmanb@google.com
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 kernel/bpf/verifier.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c
index 17270b8404f1..5534e667bdb1 100644
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -4319,7 +4319,7 @@ static int check_func_arg(struct bpf_verifier_env *env, u32 arg,
 			err = mark_chain_precision(env, regno);
 	} else if (arg_type_is_alloc_size(arg_type)) {
 		if (!tnum_is_const(reg->var_off)) {
-			verbose(env, "R%d unbounded size, use 'var &= const' or 'if (var < const)'\n",
+			verbose(env, "R%d is not a known constant'\n",
 				regno);
 			return -EACCES;
 		}
-- 
2.34.1

