From 8ff10423dfefe455d86d63dba6bb26f13af5ceb3 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.com>
Date: Mon, 16 Nov 2020 13:19:57 +0100
Subject: [PATCH 1/2] QAT: add suse_kabi_padding
References: bsn#129 jsc#SLE-14454
Patch-mainline: Never (kABI padding)
Modified-by-SEL: Yes, modified due to different context

This adds kABI padding to the headers of QAT.
That is supposed to provide reserve fields for
later backporting so that the kABI is not altered
in a harmfull manner.

Signed-off-by: Oliver Neukum <oneukum@suse.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 drivers/crypto/qat/qat_common/qat_algs.c   |    3 +++
 drivers/crypto/qat/qat_common/qat_crypto.h |    4 ++++
 2 files changed, 7 insertions(+)

--- a/drivers/crypto/qat/qat_common/qat_algs.c
+++ b/drivers/crypto/qat/qat_common/qat_algs.c
@@ -79,6 +79,8 @@ struct qat_alg_aead_ctx {
 	};
 	char ipad[SHA512_BLOCK_SIZE]; /* sufficient for SHA-1/SHA-256 as well */
 	char opad[SHA512_BLOCK_SIZE];
+
+	void *suse_kabi_padding;
 };
 
 struct qat_alg_skcipher_ctx {
@@ -91,6 +93,7 @@ struct qat_alg_skcipher_ctx {
 	struct qat_crypto_instance *inst;
 	struct crypto_skcipher *ftfm;
 	bool fallback;
+	void *suse_kabi_padding;
 };
 
 static int qat_get_inter_state_size(enum icp_qat_hw_auth_algo qat_hash_alg)
--- a/drivers/crypto/qat/qat_common/qat_crypto.h
+++ b/drivers/crypto/qat/qat_common/qat_crypto.h
@@ -18,6 +18,8 @@ struct qat_crypto_instance {
 	unsigned long state;
 	int id;
 	atomic_t refctr;
+
+	void *suse_kabi_padding;
 };
 
 struct qat_crypto_request_buffs {
@@ -46,6 +48,8 @@ struct qat_crypto_request {
 		   struct qat_crypto_request *req);
 	void *iv;
 	dma_addr_t iv_paddr;
+
+	void *suse_kabi_padding;
 };
 
 #endif
