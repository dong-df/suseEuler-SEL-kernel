From f4228b678b410a401148f9ad9911d0013fa0f24e Mon Sep 17 00:00:00 2001
From: Namjae Jeon <namjae.jeon@samsung.com>
Date: Thu, 12 Aug 2021 10:16:40 +0900
Subject: [PATCH] ksmbd: change int data type to boolean
Git-commit: f4228b678b410a401148f9ad9911d0013fa0f24e
Patch-mainline: v5.15-rc1
References: bsn#12
Modified-by-SEL: No


Change data type of function that return only 0 or 1 to boolean.

Signed-off-by: Namjae Jeon <namjae.jeon@samsung.com>
Signed-off-by: Steve French <stfrench@microsoft.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 fs/ksmbd/smb2pdu.c    | 32 ++++++++++++++++----------------
 fs/ksmbd/smb2pdu.h    |  6 +++---
 fs/ksmbd/smb_common.h |  2 +-
 3 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/fs/ksmbd/smb2pdu.c b/fs/ksmbd/smb2pdu.c
index 636570ecfa31..0de4163978ce 100644
--- a/fs/ksmbd/smb2pdu.c
+++ b/fs/ksmbd/smb2pdu.c
@@ -58,18 +58,18 @@ static void __wbuf(struct ksmbd_work *work, void **req, void **rsp)
  *
  * Return:      1 if valid session id, otherwise 0
  */
-static inline int check_session_id(struct ksmbd_conn *conn, u64 id)
+static inline bool check_session_id(struct ksmbd_conn *conn, u64 id)
 {
 	struct ksmbd_session *sess;
 
 	if (id == 0 || id == -1)
-		return 0;
+		return false;
 
 	sess = ksmbd_session_lookup_all(conn, id);
 	if (sess)
-		return 1;
+		return true;
 	pr_err("Invalid user session id: %llu\n", id);
-	return 0;
+	return false;
 }
 
 struct channel *lookup_chann_list(struct ksmbd_session *sess, struct ksmbd_conn *conn)
@@ -145,45 +145,45 @@ void smb2_set_err_rsp(struct ksmbd_work *work)
  * is_smb2_neg_cmd() - is it smb2 negotiation command
  * @work:	smb work containing smb header
  *
- * Return:      1 if smb2 negotiation command, otherwise 0
+ * Return:      true if smb2 negotiation command, otherwise false
  */
-int is_smb2_neg_cmd(struct ksmbd_work *work)
+bool is_smb2_neg_cmd(struct ksmbd_work *work)
 {
 	struct smb2_hdr *hdr = work->request_buf;
 
 	/* is it SMB2 header ? */
 	if (hdr->ProtocolId != SMB2_PROTO_NUMBER)
-		return 0;
+		return false;
 
 	/* make sure it is request not response message */
 	if (hdr->Flags & SMB2_FLAGS_SERVER_TO_REDIR)
-		return 0;
+		return false;
 
 	if (hdr->Command != SMB2_NEGOTIATE)
-		return 0;
+		return false;
 
-	return 1;
+	return true;
 }
 
 /**
  * is_smb2_rsp() - is it smb2 response
  * @work:	smb work containing smb response buffer
  *
- * Return:      1 if smb2 response, otherwise 0
+ * Return:      true if smb2 response, otherwise false
  */
-int is_smb2_rsp(struct ksmbd_work *work)
+bool is_smb2_rsp(struct ksmbd_work *work)
 {
 	struct smb2_hdr *hdr = work->response_buf;
 
 	/* is it SMB2 header ? */
 	if (hdr->ProtocolId != SMB2_PROTO_NUMBER)
-		return 0;
+		return false;
 
 	/* make sure it is response not request message */
 	if (!(hdr->Flags & SMB2_FLAGS_SERVER_TO_REDIR))
-		return 0;
+		return false;
 
-	return 1;
+	return true;
 }
 
 /**
@@ -8291,7 +8291,7 @@ int smb3_encrypt_resp(struct ksmbd_work *work)
 	return rc;
 }
 
-int smb3_is_transform_hdr(void *buf)
+bool smb3_is_transform_hdr(void *buf)
 {
 	struct smb2_transform_hdr *trhdr = buf;
 
diff --git a/fs/ksmbd/smb2pdu.h b/fs/ksmbd/smb2pdu.h
index 89019f67234c..bcec845b03f3 100644
--- a/fs/ksmbd/smb2pdu.h
+++ b/fs/ksmbd/smb2pdu.h
@@ -1638,8 +1638,8 @@ void init_smb2_max_read_size(unsigned int sz);
 void init_smb2_max_write_size(unsigned int sz);
 void init_smb2_max_trans_size(unsigned int sz);
 
-int is_smb2_neg_cmd(struct ksmbd_work *work);
-int is_smb2_rsp(struct ksmbd_work *work);
+bool is_smb2_neg_cmd(struct ksmbd_work *work);
+bool is_smb2_rsp(struct ksmbd_work *work);
 
 u16 get_smb2_cmd_val(struct ksmbd_work *work);
 void set_smb2_rsp_status(struct ksmbd_work *work, __le32 err);
@@ -1664,7 +1664,7 @@ void smb2_send_interim_resp(struct ksmbd_work *work, __le32 status);
 struct channel *lookup_chann_list(struct ksmbd_session *sess,
 				  struct ksmbd_conn *conn);
 void smb3_preauth_hash_rsp(struct ksmbd_work *work);
-int smb3_is_transform_hdr(void *buf);
+bool smb3_is_transform_hdr(void *buf);
 int smb3_decrypt_req(struct ksmbd_work *work);
 int smb3_encrypt_resp(struct ksmbd_work *work);
 bool smb3_11_final_sess_setup_resp(struct ksmbd_work *work);
diff --git a/fs/ksmbd/smb_common.h b/fs/ksmbd/smb_common.h
index c4219c3432e2..eb667d85558e 100644
--- a/fs/ksmbd/smb_common.h
+++ b/fs/ksmbd/smb_common.h
@@ -473,7 +473,7 @@ struct smb_version_ops {
 	void (*set_sign_rsp)(struct ksmbd_work *work);
 	int (*generate_signingkey)(struct ksmbd_session *sess, struct ksmbd_conn *conn);
 	int (*generate_encryptionkey)(struct ksmbd_session *sess);
-	int (*is_transform_hdr)(void *buf);
+	bool (*is_transform_hdr)(void *buf);
 	int (*decrypt_req)(struct ksmbd_work *work);
 	int (*encrypt_resp)(struct ksmbd_work *work);
 };
-- 
2.33.0

