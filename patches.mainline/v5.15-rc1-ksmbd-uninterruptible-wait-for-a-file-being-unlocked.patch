From 45a64e8b08493b768fa029a5508cec8cf2b89f2d Mon Sep 17 00:00:00 2001
From: Hyunchul Lee <hyc.lee@gmail.com>
Date: Sat, 10 Jul 2021 09:34:20 +0900
Subject: [PATCH] ksmbd: uninterruptible wait for a file being unlocked
Git-commit: 45a64e8b08493b768fa029a5508cec8cf2b89f2d
Patch-mainline: v5.15-rc1
References: bsn#12
Modified-by-SEL: Yes, modified per openEuler commit 7612b0f3d


the wait can be canceled by SMB2_CANCEL, SMB2_CLOSE,
SMB2_LOGOFF, disconnection or shutdown, we don't have
to use wait_event_interruptible.

And this remove the warning from Coverity:

CID 1502834 (#1 of 1): Unused value (UNUSED_VALUE)
returned_value: Assigning value from ksmbd_vfs_posix_lock_wait(flock)
to err here, but that stored value is overwritten before it can be used.

Signed-off-by: Hyunchul Lee <hyc.lee@gmail.com>
Signed-off-by: Namjae Jeon <namjae.jeon@samsung.com>
Signed-off-by: Steve French <stfrench@microsoft.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 fs/ksmbd/smb2pdu.c | 2 +-
 fs/ksmbd/vfs.c     | 4 ++--
 fs/ksmbd/vfs.h     | 2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/fs/ksmbd/smb2pdu.c b/fs/ksmbd/smb2pdu.c
index 3cff00fed97e..91c199af51b7 100644
--- a/fs/ksmbd/smb2pdu.c
+++ b/fs/ksmbd/smb2pdu.c
@@ -6756,7 +6756,7 @@ int smb2_lock(struct ksmbd_work *work)
 
 				smb2_send_interim_resp(work, STATUS_PENDING);
 
-				err = ksmbd_vfs_posix_lock_wait(flock);
+				ksmbd_vfs_posix_lock_wait(flock);
 
 				if (work->state != KSMBD_WORK_ACTIVE) {
 					list_del(&smb_lock->llist);
diff --git a/fs/ksmbd/vfs.c b/fs/ksmbd/vfs.c
index f6eb746fbd03..53fbcb95f3b3 100644
--- a/fs/ksmbd/vfs.c
+++ b/fs/ksmbd/vfs.c
@@ -1737,9 +1737,9 @@ int ksmbd_vfs_copy_file_ranges(struct ksmbd_work *work,
 	return 0;
 }
 
-int ksmbd_vfs_posix_lock_wait(struct file_lock *flock)
+void ksmbd_vfs_posix_lock_wait(struct file_lock *flock)
 {
-	return wait_event_interruptible(flock->fl_wait, !flock->fl_blocker);
+	wait_event(flock->fl_wait, !flock->fl_blocker);
 }
 
 int ksmbd_vfs_posix_lock_wait_timeout(struct file_lock *flock, long timeout)
diff --git a/fs/ksmbd/vfs.h b/fs/ksmbd/vfs.h
index e30174a0e5a1..319316f49aee 100644
--- a/fs/ksmbd/vfs.h
+++ b/fs/ksmbd/vfs.h
@@ -159,7 +159,7 @@ int ksmbd_vfs_unlink(struct dentry *dir, struct dentry *dentry);
 void *ksmbd_vfs_init_kstat(char **p, struct ksmbd_kstat *ksmbd_kstat);
 int ksmbd_vfs_fill_dentry_attrs(struct ksmbd_work *work, struct dentry *dentry,
 				struct ksmbd_kstat *ksmbd_kstat);
-int ksmbd_vfs_posix_lock_wait(struct file_lock *flock);
+void ksmbd_vfs_posix_lock_wait(struct file_lock *flock);
 int ksmbd_vfs_posix_lock_wait_timeout(struct file_lock *flock, long timeout);
 void ksmbd_vfs_posix_lock_unblock(struct file_lock *flock);
 int ksmbd_vfs_remove_acl_xattrs(struct dentry *dentry);
-- 
2.33.0

