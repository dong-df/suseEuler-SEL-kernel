From 96ad4ec51c06c6fafc10b4e3a20753e127ce27d4 Mon Sep 17 00:00:00 2001
From: Namjae Jeon <namjae.jeon@samsung.com>
Date: Tue, 13 Jul 2021 17:17:28 +0900
Subject: [PATCH] ksmbd: fix unused err value in smb2_lock
Git-commit: 96ad4ec51c06c6fafc10b4e3a20753e127ce27d4
Patch-mainline: v5.15-rc1
References: bsn#12
Modified-by-SEL: No


CID 1502845 (#1 of 1): Unused value (UNUSED_VALUE)
value_overwrite: Overwriting previous write to err with value from
vfs_lock_file(filp, 0U, rlock, NULL).
6880                err = vfs_lock_file(filp, 0, rlock, NULL);
6881                if (err)
6882                        pr_err("rollback unlock fail : %d\n", err);

Reported-by: Coverity Scan <scan-admin@coverity.com>
Signed-off-by: Namjae Jeon <namjae.jeon@samsung.com>
Signed-off-by: Steve French <stfrench@microsoft.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 fs/ksmbd/smb2pdu.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/fs/ksmbd/smb2pdu.c b/fs/ksmbd/smb2pdu.c
index 319e07a28dca..ee91d99dbf9b 100644
--- a/fs/ksmbd/smb2pdu.c
+++ b/fs/ksmbd/smb2pdu.c
@@ -6835,7 +6835,7 @@ int smb2_lock(struct ksmbd_work *work)
 	rsp->Reserved = 0;
 	inc_rfc1001_len(rsp, 4);
 	ksmbd_fd_put(work, fp);
-	return err;
+	return 0;
 
 out:
 	list_for_each_entry_safe(smb_lock, tmp, &lock_list, llist) {
@@ -6846,15 +6846,16 @@ int smb2_lock(struct ksmbd_work *work)
 
 	list_for_each_entry_safe(smb_lock, tmp, &rollback_list, llist) {
 		struct file_lock *rlock = NULL;
+		int rc;
 
 		rlock = smb_flock_init(filp);
 		rlock->fl_type = F_UNLCK;
 		rlock->fl_start = smb_lock->start;
 		rlock->fl_end = smb_lock->end;
 
-		err = vfs_lock_file(filp, 0, rlock, NULL);
-		if (err)
-			pr_err("rollback unlock fail : %d\n", err);
+		rc = vfs_lock_file(filp, 0, rlock, NULL);
+		if (rc)
+			pr_err("rollback unlock fail : %d\n", rc);
 
 		list_del(&smb_lock->llist);
 		spin_lock(&work->conn->llist_lock);
@@ -6871,7 +6872,7 @@ int smb2_lock(struct ksmbd_work *work)
 	ksmbd_debug(SMB, "failed in taking lock(flags : %x)\n", flags);
 	smb2_set_err_rsp(work);
 	ksmbd_fd_put(work, fp);
-	return 0;
+	return err;
 }
 
 static int fsctl_copychunk(struct ksmbd_work *work, struct smb2_ioctl_req *req,
-- 
2.33.0

