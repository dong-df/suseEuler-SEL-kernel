From f46ec84b5acbf8d7067d71a6bbdde213d4b86036 Mon Sep 17 00:00:00 2001
From: Tejun Heo <tj@kernel.org>
Date: Thu, 22 Apr 2021 21:54:28 -0400
Subject: [PATCH] blk-iocost: don't ignore vrate_min on QD contention
Git-commit: f46ec84b5acbf8d7067d71a6bbdde213d4b86036
Patch-mainline: v5.13-rc1
References: bsn#12
Modified-by-SEL: Yes, modified due to different context


ioc_adjust_base_vrate() ignored vrate_min when rq_wait_pct indicates that
there is QD contention. The reasoning was that QD depletion always reliably
indicates device saturation and thus it's safe to override user specified
vrate_min. However, this sometimes leads to unnecessary throttling,
especially on really fast devices, because vrate adjustments have delays and
inertia. It also confuses users because the behavior violates the explicitly
specified configuration.

This patch drops the special case handling so that vrate_min is always
applied.

Signed-off-by: Tejun Heo <tj@kernel.org>
Link: https://lore.kernel.org/r/YIIo1HuyNmhDeiNx@slm.duckdns.org
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 block/blk-iocost.c |    4 ----
 1 file changed, 4 deletions(-)

--- a/block/blk-iocost.c
+++ b/block/blk-iocost.c
@@ -2341,10 +2341,6 @@ static void ioc_timer_fn(struct timer_li
 		u64 vrate = ioc->vtime_base_rate;
 		u64 vrate_min = ioc->vrate_min, vrate_max = ioc->vrate_max;
 
-		/* rq_wait signal is always reliable, ignore user vrate_min */
-		if (rq_wait_pct > RQ_WAIT_BUSY_PCT)
-			vrate_min = VRATE_MIN;
-
 		/*
 		 * If vrate is out of bounds, apply clamp gradually as the
 		 * bounds can change abruptly.  Otherwise, apply busy_level
