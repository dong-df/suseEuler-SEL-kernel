From 822bc8ea514ecd4a8bbb86237858146ca8845eba Mon Sep 17 00:00:00 2001
From: Muhammad Usama Anjum <musamaanjum@gmail.com>
Date: Fri, 2 Apr 2021 09:25:35 +0900
Subject: [PATCH] cifsd: use kfree to free memory allocated by kmalloc or
 kzalloc
Git-commit: 822bc8ea514ecd4a8bbb86237858146ca8845eba
Patch-mainline: v5.15-rc1
References: bsn#12
Modified-by-SEL: No


kfree should be used to free memory allocated by kmalloc or kzalloc to
avoid any overhead and for maintaining consistency.

Signed-off-by: Muhammad Usama Anjum <musamaanjum@gmail.com>
Signed-off-by: Namjae Jeon <namjae.jeon@samsung.com>
Signed-off-by: Steve French <stfrench@microsoft.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 fs/cifsd/buffer_pool.c       | 4 ++--
 fs/cifsd/mgmt/share_config.c | 2 +-
 fs/cifsd/mgmt/user_config.c  | 8 ++++----
 fs/cifsd/mgmt/user_session.c | 6 +++---
 fs/cifsd/smb2pdu.c           | 4 ++--
 fs/cifsd/transport_tcp.c     | 2 +-
 fs/cifsd/vfs_cache.c         | 2 +-
 7 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/fs/cifsd/buffer_pool.c b/fs/cifsd/buffer_pool.c
index ad2a2c885a2c..a9ef3e703232 100644
--- a/fs/cifsd/buffer_pool.c
+++ b/fs/cifsd/buffer_pool.c
@@ -78,7 +78,7 @@ static int register_wm_size_class(size_t sz)
 	list_for_each_entry(l, &wm_lists, list) {
 		if (l->sz == sz) {
 			write_unlock(&wm_lists_lock);
-			kvfree(nl);
+			kfree(nl);
 			return 0;
 		}
 	}
@@ -181,7 +181,7 @@ static void wm_list_free(struct wm_list *l)
 		list_del(&wm->list);
 		kvfree(wm);
 	}
-	kvfree(l);
+	kfree(l);
 }
 
 static void wm_lists_destroy(void)
diff --git a/fs/cifsd/mgmt/share_config.c b/fs/cifsd/mgmt/share_config.c
index b2bd789af945..11abdbc8a533 100644
--- a/fs/cifsd/mgmt/share_config.c
+++ b/fs/cifsd/mgmt/share_config.c
@@ -102,7 +102,7 @@ static int parse_veto_list(struct ksmbd_share_config *share,
 
 		p->pattern = kstrdup(veto_list, GFP_KERNEL);
 		if (!p->pattern) {
-			ksmbd_free(p);
+			kfree(p);
 			return -ENOMEM;
 		}
 
diff --git a/fs/cifsd/mgmt/user_config.c b/fs/cifsd/mgmt/user_config.c
index f0c2f8994a6b..c31e2c4d2d6f 100644
--- a/fs/cifsd/mgmt/user_config.c
+++ b/fs/cifsd/mgmt/user_config.c
@@ -46,8 +46,8 @@ struct ksmbd_user *ksmbd_alloc_user(struct ksmbd_login_response *resp)
 
 	if (!user->name || !user->passkey) {
 		kfree(user->name);
-		ksmbd_free(user->passkey);
-		ksmbd_free(user);
+		kfree(user->passkey);
+		kfree(user);
 		user = NULL;
 	}
 	return user;
@@ -57,8 +57,8 @@ void ksmbd_free_user(struct ksmbd_user *user)
 {
 	ksmbd_ipc_logout_request(user->name);
 	kfree(user->name);
-	ksmbd_free(user->passkey);
-	ksmbd_free(user);
+	kfree(user->passkey);
+	kfree(user);
 }
 
 int ksmbd_anonymous_user(struct ksmbd_user *user)
diff --git a/fs/cifsd/mgmt/user_session.c b/fs/cifsd/mgmt/user_session.c
index f5cc7a62d848..9dfe222e51ab 100644
--- a/fs/cifsd/mgmt/user_session.c
+++ b/fs/cifsd/mgmt/user_session.c
@@ -55,7 +55,7 @@ static void __session_rpc_close(struct ksmbd_session *sess,
 
 	ksmbd_free(resp);
 	ksmbd_rpc_id_free(entry->id);
-	ksmbd_free(entry);
+	kfree(entry);
 }
 
 static void ksmbd_session_rpc_clear_list(struct ksmbd_session *sess)
@@ -121,7 +121,7 @@ int ksmbd_session_rpc_open(struct ksmbd_session *sess, char *rpc_name)
 	return entry->id;
 error:
 	list_del(&entry->list);
-	ksmbd_free(entry);
+	kfree(entry);
 	return -EINVAL;
 }
 
@@ -176,7 +176,7 @@ void ksmbd_session_destroy(struct ksmbd_session *sess)
 	ksmbd_release_id(session_ida, sess->id);
 
 	ksmbd_ida_free(sess->tree_conn_ida);
-	ksmbd_free(sess);
+	kfree(sess);
 }
 
 static struct ksmbd_session *__session_lookup(unsigned long long id)
diff --git a/fs/cifsd/smb2pdu.c b/fs/cifsd/smb2pdu.c
index 0b7199444f73..7549b35bb792 100644
--- a/fs/cifsd/smb2pdu.c
+++ b/fs/cifsd/smb2pdu.c
@@ -1611,7 +1611,7 @@ int smb2_sess_setup(struct ksmbd_work *work)
 
 			ksmbd_conn_set_good(work);
 			sess->state = SMB2_SESSION_VALID;
-			ksmbd_free(sess->Preauth_HashValue);
+			kfree(sess->Preauth_HashValue);
 			sess->Preauth_HashValue = NULL;
 		} else if (conn->preferred_auth_mech == KSMBD_AUTH_NTLMSSP) {
 			rc = generate_preauth_hash(work);
@@ -1637,7 +1637,7 @@ int smb2_sess_setup(struct ksmbd_work *work)
 
 				ksmbd_conn_set_good(work);
 				sess->state = SMB2_SESSION_VALID;
-				ksmbd_free(sess->Preauth_HashValue);
+				kfree(sess->Preauth_HashValue);
 				sess->Preauth_HashValue = NULL;
 			}
 		} else {
diff --git a/fs/cifsd/transport_tcp.c b/fs/cifsd/transport_tcp.c
index 67163efcf472..040881893417 100644
--- a/fs/cifsd/transport_tcp.c
+++ b/fs/cifsd/transport_tcp.c
@@ -551,7 +551,7 @@ void ksmbd_tcp_destroy(void)
 	list_for_each_entry_safe(iface, tmp, &iface_list, entry) {
 		list_del(&iface->entry);
 		kfree(iface->name);
-		ksmbd_free(iface);
+		kfree(iface);
 	}
 }
 
diff --git a/fs/cifsd/vfs_cache.c b/fs/cifsd/vfs_cache.c
index ec631dc6f1fb..f2a863542dc7 100644
--- a/fs/cifsd/vfs_cache.c
+++ b/fs/cifsd/vfs_cache.c
@@ -829,6 +829,6 @@ void ksmbd_destroy_file_table(struct ksmbd_file_table *ft)
 
 	__close_file_table_ids(ft, NULL, session_fd_check);
 	idr_destroy(ft->idr);
-	ksmbd_free(ft->idr);
+	kfree(ft->idr);
 	ft->idr = NULL;
 }
-- 
2.33.0

