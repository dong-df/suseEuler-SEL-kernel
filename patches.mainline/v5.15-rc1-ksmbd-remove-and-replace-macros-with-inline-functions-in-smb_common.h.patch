From d8fb29980cb5369c4ea520c0b4e1a8893e88f14c Mon Sep 17 00:00:00 2001
From: Hyunchul Lee <hyc.lee@gmail.com>
Date: Fri, 25 Jun 2021 11:53:26 +0900
Subject: [PATCH] ksmbd: remove and replace macros with inline functions in
 smb_common.h
Git-commit: d8fb29980cb5369c4ea520c0b4e1a8893e88f14c
Patch-mainline: v5.15-rc1
References: bsn#12
Modified-by-SEL: No


Remove and replace macros with inline functions
in smb_common.h

Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Hyunchul Lee <hyc.lee@gmail.com>
Signed-off-by: Namjae Jeon <namjae.jeon@samsung.com>
Signed-off-by: Steve French <stfrench@microsoft.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 fs/ksmbd/mgmt/user_session.c |  8 +++-----
 fs/ksmbd/oplock.c            |  6 ++++--
 fs/ksmbd/smb2pdu.c           |  5 +++--
 fs/ksmbd/smb_common.h        | 12 ++++++------
 4 files changed, 16 insertions(+), 15 deletions(-)

diff --git a/fs/ksmbd/mgmt/user_session.c b/fs/ksmbd/mgmt/user_session.c
index c5ba9694e1f1..8d8ffd8c6f19 100644
--- a/fs/ksmbd/mgmt/user_session.c
+++ b/fs/ksmbd/mgmt/user_session.c
@@ -154,11 +154,9 @@ void ksmbd_session_destroy(struct ksmbd_session *sess)
 
 	list_del(&sess->sessions_entry);
 
-	if (IS_SMB2(sess->conn)) {
-		down_write(&sessions_table_lock);
-		hash_del(&sess->hlist);
-		up_write(&sessions_table_lock);
-	}
+	down_write(&sessions_table_lock);
+	hash_del(&sess->hlist);
+	up_write(&sessions_table_lock);
 
 	if (sess->user)
 		ksmbd_free_user(sess->user);
diff --git a/fs/ksmbd/oplock.c b/fs/ksmbd/oplock.c
index 9027cb7d970f..71e15a591582 100644
--- a/fs/ksmbd/oplock.c
+++ b/fs/ksmbd/oplock.c
@@ -631,7 +631,8 @@ static void __smb2_oplock_break_noti(struct work_struct *wk)
 
 	rsp_hdr = work->response_buf;
 	memset(rsp_hdr, 0, sizeof(struct smb2_hdr) + 2);
-	rsp_hdr->smb2_buf_length = cpu_to_be32(HEADER_SIZE_NO_BUF_LEN(conn));
+	rsp_hdr->smb2_buf_length =
+		cpu_to_be32(smb2_hdr_size_no_buflen(conn->vals));
 	rsp_hdr->ProtocolId = SMB2_PROTO_NUMBER;
 	rsp_hdr->StructureSize = SMB2_HEADER_STRUCTURE_SIZE;
 	rsp_hdr->CreditRequest = cpu_to_le16(0);
@@ -737,7 +738,8 @@ static void __smb2_lease_break_noti(struct work_struct *wk)
 
 	rsp_hdr = work->response_buf;
 	memset(rsp_hdr, 0, sizeof(struct smb2_hdr) + 2);
-	rsp_hdr->smb2_buf_length = cpu_to_be32(HEADER_SIZE_NO_BUF_LEN(conn));
+	rsp_hdr->smb2_buf_length =
+		cpu_to_be32(smb2_hdr_size_no_buflen(conn->vals));
 	rsp_hdr->ProtocolId = SMB2_PROTO_NUMBER;
 	rsp_hdr->StructureSize = SMB2_HEADER_STRUCTURE_SIZE;
 	rsp_hdr->CreditRequest = cpu_to_le16(0);
diff --git a/fs/ksmbd/smb2pdu.c b/fs/ksmbd/smb2pdu.c
index 38a36390b64d..ece03135127c 100644
--- a/fs/ksmbd/smb2pdu.c
+++ b/fs/ksmbd/smb2pdu.c
@@ -243,7 +243,7 @@ int init_smb2_neg_rsp(struct ksmbd_work *work)
 	memset(rsp_hdr, 0, sizeof(struct smb2_hdr) + 2);
 
 	rsp_hdr->smb2_buf_length =
-		cpu_to_be32(HEADER_SIZE_NO_BUF_LEN(conn));
+		cpu_to_be32(smb2_hdr_size_no_buflen(conn->vals));
 
 	rsp_hdr->ProtocolId = SMB2_PROTO_NUMBER;
 	rsp_hdr->StructureSize = SMB2_HEADER_STRUCTURE_SIZE;
@@ -497,7 +497,8 @@ int init_smb2_rsp_hdr(struct ksmbd_work *work)
 	struct ksmbd_conn *conn = work->conn;
 
 	memset(rsp_hdr, 0, sizeof(struct smb2_hdr) + 2);
-	rsp_hdr->smb2_buf_length = cpu_to_be32(HEADER_SIZE_NO_BUF_LEN(conn));
+	rsp_hdr->smb2_buf_length =
+		cpu_to_be32(smb2_hdr_size_no_buflen(conn->vals));
 	rsp_hdr->ProtocolId = rcv_hdr->ProtocolId;
 	rsp_hdr->StructureSize = SMB2_HEADER_STRUCTURE_SIZE;
 	rsp_hdr->Command = rcv_hdr->Command;
diff --git a/fs/ksmbd/smb_common.h b/fs/ksmbd/smb_common.h
index 084166ba7654..8489b92229fa 100644
--- a/fs/ksmbd/smb_common.h
+++ b/fs/ksmbd/smb_common.h
@@ -50,12 +50,6 @@
 
 extern struct list_head global_lock_list;
 
-#define IS_SMB2(x)		((x)->vals->protocol_id != SMB10_PROT_ID)
-
-#define HEADER_SIZE(conn)		((conn)->vals->header_size)
-#define HEADER_SIZE_NO_BUF_LEN(conn)	((conn)->vals->header_size - 4)
-#define MAX_HEADER_SIZE(conn)		((conn)->vals->max_header_size)
-
 /* RFC 1002 session packet types */
 #define RFC1002_SESSION_MESSAGE			0x00
 #define RFC1002_SESSION_REQUEST			0x81
@@ -490,6 +484,12 @@ struct smb_version_cmds {
 	int (*proc)(struct ksmbd_work *swork);
 };
 
+static inline size_t
+smb2_hdr_size_no_buflen(struct smb_version_values *vals)
+{
+	return vals->header_size - 4;
+}
+
 int ksmbd_min_protocol(void);
 int ksmbd_max_protocol(void);
 
-- 
2.33.0

