From 02d4b4aa6d3b135b00f20da9d623d2bbae63768f Mon Sep 17 00:00:00 2001
From: Namjae Jeon <namjae.jeon@samsung.com>
Date: Fri, 25 Jun 2021 13:43:01 +0900
Subject: [PATCH] ksmbd: replace SMB_DIRECT_TRANS macro with inline function
Git-commit: 02d4b4aa6d3b135b00f20da9d623d2bbae63768f
Patch-mainline: v5.15-rc1
References: bsn#12
Modified-by-SEL: No


replace SMB_DIRECT_TRANS macro with inline function.

Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Namjae Jeon <namjae.jeon@samsung.com>
Signed-off-by: Steve French <stfrench@microsoft.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 fs/ksmbd/transport_rdma.c | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/fs/ksmbd/transport_rdma.c b/fs/ksmbd/transport_rdma.c
index b3af474d4cad..171fb3dd018a 100644
--- a/fs/ksmbd/transport_rdma.c
+++ b/fs/ksmbd/transport_rdma.c
@@ -158,8 +158,6 @@ struct smb_direct_transport {
 };
 
 #define KSMBD_TRANS(t) ((struct ksmbd_transport *)&((t)->transport))
-#define SMB_DIRECT_TRANS(t) ((struct smb_direct_transport *)container_of(t, \
-				struct smb_direct_transport, transport))
 
 enum {
 	SMB_DIRECT_MSG_NEGOTIATE_REQ = 0,
@@ -217,6 +215,12 @@ static int smb_direct_post_send_data(struct smb_direct_transport *t,
 				     struct kvec *iov, int niov,
 				     int remaining_data_length);
 
+static inline struct smb_direct_transport *
+smb_trans_direct_transfort(struct ksmbd_transport *t)
+{
+	return container_of(t, struct smb_direct_transport, transport);
+}
+
 static inline void
 *smb_direct_recvmsg_payload(struct smb_direct_recvmsg *recvmsg)
 {
@@ -643,7 +647,7 @@ static int smb_direct_read(struct ksmbd_transport *t, char *buf,
 	int to_copy, to_read, data_read, offset;
 	u32 data_length, remaining_data_length, data_offset;
 	int rc;
-	struct smb_direct_transport *st = SMB_DIRECT_TRANS(t);
+	struct smb_direct_transport *st = smb_trans_direct_transfort(t);
 
 again:
 	if (st->status != SMB_DIRECT_CS_CONNECTED) {
@@ -1194,7 +1198,7 @@ static int smb_direct_writev(struct ksmbd_transport *t,
 			     struct kvec *iov, int niovs, int buflen,
 			     bool need_invalidate, unsigned int remote_key)
 {
-	struct smb_direct_transport *st = SMB_DIRECT_TRANS(t);
+	struct smb_direct_transport *st = smb_trans_direct_transfort(t);
 	int remaining_data_length;
 	int start, i, j;
 	int max_iov_size = st->max_send_size -
@@ -1393,7 +1397,7 @@ static int smb_direct_rdma_write(struct ksmbd_transport *t, void *buf,
 				 unsigned int buflen, u32 remote_key,
 				 u64 remote_offset, u32 remote_len)
 {
-	return smb_direct_rdma_xmit(SMB_DIRECT_TRANS(t), buf, buflen,
+	return smb_direct_rdma_xmit(smb_trans_direct_transfort(t), buf, buflen,
 				    remote_key, remote_offset,
 				    remote_len, false);
 }
@@ -1402,14 +1406,14 @@ static int smb_direct_rdma_read(struct ksmbd_transport *t, void *buf,
 				unsigned int buflen, u32 remote_key,
 				u64 remote_offset, u32 remote_len)
 {
-	return smb_direct_rdma_xmit(SMB_DIRECT_TRANS(t), buf, buflen,
+	return smb_direct_rdma_xmit(smb_trans_direct_transfort(t), buf, buflen,
 				    remote_key, remote_offset,
 				    remote_len, true);
 }
 
 static void smb_direct_disconnect(struct ksmbd_transport *t)
 {
-	struct smb_direct_transport *st = SMB_DIRECT_TRANS(t);
+	struct smb_direct_transport *st = smb_trans_direct_transfort(t);
 
 	ksmbd_debug(RDMA, "Disconnecting cm_id=%p\n", st->cm_id);
 
@@ -1857,7 +1861,7 @@ static int smb_direct_create_qpair(struct smb_direct_transport *t,
 
 static int smb_direct_prepare(struct ksmbd_transport *t)
 {
-	struct smb_direct_transport *st = SMB_DIRECT_TRANS(t);
+	struct smb_direct_transport *st = smb_trans_direct_transfort(t);
 	int ret;
 	struct ib_qp_cap qp_cap;
 
-- 
2.33.0

