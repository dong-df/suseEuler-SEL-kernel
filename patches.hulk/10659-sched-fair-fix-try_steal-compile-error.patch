From bf4975b06ce369639506efc9f5bf2c2c916cf7ae Mon Sep 17 00:00:00 2001
From: Cheng Jian <cj.chengjian@huawei.com>
Date: Thu, 11 Nov 2021 16:28:52 +0800
Subject: [PATCH] sched/fair: fix try_steal compile error
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: bf4975b06ce369639506efc9f5bf2c2c916cf7ae

MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

hulk inclusion
category: bugfix
bugzilla: 38261, https://gitee.com/openeuler/kernel/issues/I49XPZ
CVE: NA

---------------------------

If we disable CONFIG_SMP, try_steal will lose its definition,
resulting in a compile error as follows.

	kernel/sched/fair.c: In function ‘pick_next_task_fair’:
	kernel/sched/fair.c:7001:15: error: implicit declaration of function ‘try_steal’ [-Werror=implicit-function-declaration]
		new_tasks = try_steal(rq, rf);
			    ^~~~~~~~~

We can use allnoconfig to reproduce this problem.

Signed-off-by: Cheng Jian <cj.chengjian@huawei.com>
Reviewed-by: Bin Li <huawei.libin@huawei.com>
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Reviewed-by: Xie XiuQi <xiexiuqi@huawei.com>
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Reviewed-by: Chen Hui <judy.chenhui@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 kernel/sched/fair.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 5c7caca3aa96..9c34ad6f9a67 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -4243,6 +4243,7 @@ static inline int newidle_balance(struct rq *rq, struct rq_flags *rf)
 
 static inline void rq_idle_stamp_update(struct rq *rq) {}
 static inline void rq_idle_stamp_clear(struct rq *rq) {}
+static inline int try_steal(struct rq *this_rq, struct rq_flags *rf) { return 0; }
 static inline void overload_clear(struct rq *rq) {}
 static inline void overload_set(struct rq *rq) {}
 
-- 
2.26.2

