From 7405ca0d519e57cdd89eb07ca2b4212201d932d6 Mon Sep 17 00:00:00 2001
From: Yufen Yu <yuyufen@huawei.com>
Date: Thu, 1 Jul 2021 17:49:55 +0800
Subject: [PATCH] block: avoid creating invalid symlink file for patitions
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 7405ca0d519e57cdd89eb07ca2b4212201d932d6


hulk inclusion
category: bugfix
bugzilla: 168631
CVE: NA

-------------------------------------------------

For now, there is no mechanism that can provent ioctl to call
add_partition after del_gendisk() have called delete_partition().
Then, invalid symlinks file may be created into /sys/class/block.

We try to fix this problem by setting GENHD_FL_UP early in del_gendisk()
and check the flag before adding partitions likely that do in
mainline kernel. Since all of them are cover by bdev->bd_mutex,
either add_partition success but will delete by del_gendisk(),
or add_partition will fail return as GENHD_FL_UP have been cleared.

Signed-off-by: Yufen Yu <yuyufen@huawei.com>
Reviewed-by: Jason Yan <yanaijie@huawei.com>
Signed-off-by: Chen Jun <chenjun102@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 block/genhd.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/block/genhd.c b/block/genhd.c
index 7856e91ed470..8846cbdc75d4 100644
--- a/block/genhd.c
+++ b/block/genhd.c
@@ -920,6 +920,7 @@ void del_gendisk(struct gendisk *disk)
 	bdev = bdget_disk(disk, 0);
 	if (bdev)
 		mutex_lock(&bdev->bd_mutex);
+	disk->flags &= ~GENHD_FL_UP;
 	/* invalidate stuff */
 	disk_part_iter_init(&piter, disk,
 			     DISK_PITER_INCL_EMPTY | DISK_PITER_REVERSE);
@@ -935,7 +936,6 @@ void del_gendisk(struct gendisk *disk)
 
 	invalidate_partition(disk, 0);
 	set_capacity(disk, 0);
-	disk->flags &= ~GENHD_FL_UP;
 	up_write(&disk->lookup_sem);
 
 	if (!(disk->flags & GENHD_FL_HIDDEN))
-- 
2.26.2

