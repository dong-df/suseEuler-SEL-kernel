From e441298fbde6ca3e5c50ec7626c3c270b580f63b Mon Sep 17 00:00:00 2001
From: Li Huafei <lihuafei1@huawei.com>
Date: Wed, 9 Jun 2021 16:22:13 +0800
Subject: [PATCH] Revert "perf kmem: Do not pass additional arguments
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: e441298fbde6ca3e5c50ec7626c3c270b580f63b


to 'perf record'"

hulk inclusion
category: bugfix
bugzilla: 51797
CVE: NA

--------------------------------

This reverts commit 5549b4660d62946828db854252e5fb66e6007e88.

There should be no problem with mainline. Follow the prompts given
by 'perf kmem -h' to use it.

Signed-off-by: Li Huafei <lihuafei1@huawei.com>
Reviewed-by: Kuohai Xu <xukuohai@huawei.com>
Signed-off-by: Chen Jun <chenjun102@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 tools/perf/builtin-kmem.c | 14 ++------------
 1 file changed, 2 insertions(+), 12 deletions(-)

diff --git a/tools/perf/builtin-kmem.c b/tools/perf/builtin-kmem.c
index 71c27b530721..a50dae2c4ae9 100644
--- a/tools/perf/builtin-kmem.c
+++ b/tools/perf/builtin-kmem.c
@@ -82,9 +82,6 @@ static unsigned long nr_allocs, nr_cross_allocs;
 static struct perf_time_interval ptime;
 const char *time_str;
 
-/* output file of 'perf kmem record' */
-static const char *output_name;
-
 static int insert_alloc_stat(unsigned long call_site, unsigned long ptr,
 			     int bytes_req, int bytes_alloc, int cpu)
 {
@@ -1851,8 +1848,6 @@ static int __cmd_record(int argc, const char **argv)
 		rec_argc += ARRAY_SIZE(slab_events);
 	if (kmem_page)
 		rec_argc += ARRAY_SIZE(page_events) + 1; /* for -g */
-	if (output_name)
-		rec_argc += 2;
 
 	rec_argv = calloc(rec_argc + 1, sizeof(char *));
 
@@ -1873,11 +1868,6 @@ static int __cmd_record(int argc, const char **argv)
 			rec_argv[i] = strdup(page_events[j]);
 	}
 
-	if (output_name) {
-		rec_argv[i++] = strdup("-o");
-		rec_argv[i++] = strdup(output_name);
-	}
-
 	for (j = 1; j < (unsigned int)argc; j++, i++)
 		rec_argv[i] = argv[j];
 
@@ -1909,7 +1899,6 @@ int cmd_kmem(int argc, const char **argv)
 	};
 	const struct option kmem_options[] = {
 	OPT_STRING('i', "input", &input_name, "file", "input file name"),
-	OPT_STRING('o', "output", &output_name, "file", "output file name"),
 	OPT_INCR('v', "verbose", &verbose,
 		    "be more verbose (show symbol address, etc)"),
 	OPT_CALLBACK_NOOPT(0, "caller", NULL, NULL,
@@ -1944,7 +1933,8 @@ int cmd_kmem(int argc, const char **argv)
 		return ret;
 
 	argc = parse_options_subcommand(argc, argv, kmem_options,
-					kmem_subcommands, kmem_usage, 0);
+					kmem_subcommands, kmem_usage,
+					PARSE_OPT_STOP_AT_NON_OPTION);
 
 	if (!argc)
 		usage_with_options(kmem_usage, kmem_options);
-- 
2.26.2

