From 50ea07bbfcc780163633323f9894ae7b6ab4098a Mon Sep 17 00:00:00 2001
From: Baokun Li <libaokun1@huawei.com>
Date: Tue, 30 Nov 2021 16:32:04 +0800
Subject: [PATCH] ubifs: fix double return leb in ubifs_garbage_collect
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 50ea07bbfcc780163633323f9894ae7b6ab4098a


hulk inclusion
category: bugfix
bugzilla: 182993 https://gitee.com/openeuler/kernel/issues/I4DDEL

---------------------------

If ubifs_garbage_collect_leb() returns -EAGAIN and enters the "out"
branch, ubifs_return_leb will execute twice on the same lnum. This
can cause data loss in concurrency situations.

Reported-by: Hulk Robot <hulkci@huawei.com>
Signed-off-by: Baokun Li <libaokun1@huawei.com>
Reviewed-by: Zhang Yi <yi.zhang@huawei.com>

Signed-off-by: Chen Jun <chenjun102@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 fs/ubifs/gc.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/fs/ubifs/gc.c b/fs/ubifs/gc.c
index 05e1eeae8457..238a60294d10 100644
--- a/fs/ubifs/gc.c
+++ b/fs/ubifs/gc.c
@@ -758,6 +758,8 @@ int ubifs_garbage_collect(struct ubifs_info *c, int anyway)
 				err = ubifs_return_leb(c, lp.lnum);
 				if (err)
 					ret = err;
+				/*  Maybe double return if go out */
+				lp.lnum = -1;
 				break;
 			}
 			goto out;
-- 
2.26.2

