Git-commit: bec1be0a745ab420718217e3e0d9542a75108989
Message-Id: <bec1be0a745ab420718217e3e0d9542a75108989.1657261911.git.geliang.tang@suse.com>
In-Reply-To: <03b9e016598f6f7f6676d4e1c927e11a1863aeae.1657261911.git.geliang.tang@suse.com>
References: <03b9e016598f6f7f6676d4e1c927e11a1863aeae.1657261911.git.geliang.tang@suse.com>
From: Jakub Kicinski <kuba@kernel.org>
Date: Wed, 22 Jun 2022 21:20:39 -0700
Subject: [PATCH] net: tun: unlink NAPI from device on destruction
References: bsn#19
Patch-mainline: v5.10.129

commit 3b9bc84d311104906d2b4995a9a02d7b7ddab2db upstream.

Syzbot found a race between tun file and device destruction.
NAPIs live in struct tun_file which can get destroyed before
the netdev so we have to del them explicitly. The current
code is missing deleting the NAPI if the queue was detached
first.

Fixes: 943170998b20 ("tun: enable NAPI for TUN/TAP driver")
Reported-by: syzbot+b75c138e9286ac742647@syzkaller.appspotmail.com
Link: https://lore.kernel.org/r/20220623042039.2274708-1-kuba@kernel.org
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 drivers/net/tun.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 55ce141c93c7..aa8ee7542c3c 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -733,6 +733,7 @@ static void tun_detach_all(struct net_device *dev)
 		sock_put(&tfile->sk);
 	}
 	list_for_each_entry_safe(tfile, tmp, &tun->disabled, next) {
+		tun_napi_del(tfile);
 		tun_enable_queue(tfile);
 		tun_queue_purge(tfile);
 		xdp_rxq_info_unreg(&tfile->xdp_rxq);
-- 
2.34.1

