Git-commit: cff2b3a50c69c0c72593f87190c88d0235df6503
Message-Id: <cff2b3a50c69c0c72593f87190c88d0235df6503.1663724959.git.geliang.tang@suse.com>
In-Reply-To: <a381cac2ab080944893b096570dd4b324be87e26.1663724959.git.geliang.tang@suse.com>
References: <a381cac2ab080944893b096570dd4b324be87e26.1663724959.git.geliang.tang@suse.com>
From: Rob Clark <robdclark@chromium.org>
Date: Sun, 7 Aug 2022 09:09:01 -0700
Subject: [PATCH] drm/msm/rd: Fix FIFO-full deadlock
References: bsn#19
Patch-mainline: v5.10.144

[ Upstream commit 174974d8463b77c2b4065e98513adb204e64de7d ]

If the previous thing cat'ing $debugfs/rd left the FIFO full, then
subsequent open could deadlock in rd_write() (because open is blocked,
not giving a chance for read() to consume any data in the FIFO).  Also
it is generally a good idea to clear out old data from the FIFO.

Signed-off-by: Rob Clark <robdclark@chromium.org>
Patchwork: https://patchwork.freedesktop.org/patch/496706/
Link: https://lore.kernel.org/r/20220807160901.2353471-2-robdclark@gmail.com
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 drivers/gpu/drm/msm/msm_rd.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/gpu/drm/msm/msm_rd.c b/drivers/gpu/drm/msm/msm_rd.c
index fea30e7aa9e8..084b6ae2a476 100644
--- a/drivers/gpu/drm/msm/msm_rd.c
+++ b/drivers/gpu/drm/msm/msm_rd.c
@@ -191,6 +191,9 @@ static int rd_open(struct inode *inode, struct file *file)
 	file->private_data = rd;
 	rd->open = true;
 
+	/* Reset fifo to clear any previously unread data: */
+	rd->fifo.head = rd->fifo.tail = 0;
+
 	/* the parsing tools need to know gpu-id to know which
 	 * register database to load.
 	 */
-- 
2.35.3

