Git-commit: 891f03f688de8418f44b32b88f6b4faed5b2aa81
Message-Id: <891f03f688de8418f44b32b88f6b4faed5b2aa81.1663724959.git.geliang.tang@suse.com>
In-Reply-To: <a381cac2ab080944893b096570dd4b324be87e26.1663724959.git.geliang.tang@suse.com>
References: <a381cac2ab080944893b096570dd4b324be87e26.1663724959.git.geliang.tang@suse.com>
From: Jann Horn <jannh@google.com>
Date: Thu, 15 Sep 2022 16:25:19 +0200
Subject: [PATCH] mm: Fix TLB flush for not-first PFNMAP mappings in
 unmap_region()
References: bsn#19
Patch-mainline: v5.10.144

This is a stable-specific patch.
I botched the stable-specific rewrite of
commit b67fbebd4cf98 ("mmu_gather: Force tlb-flush VM_PFNMAP vmas"):
As Hugh pointed out, unmap_region() actually operates on a list of VMAs,
and the variable "vma" merely points to the first VMA in that list.
So if we want to check whether any of the VMAs we're operating on is
PFNMAP or MIXEDMAP, we have to iterate through the list and check each VMA.

Signed-off-by: Jann Horn <jannh@google.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 mm/mmap.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/mm/mmap.c b/mm/mmap.c
index b69c9711bb26..31fc116a8ec9 100644
--- a/mm/mmap.c
+++ b/mm/mmap.c
@@ -2664,6 +2664,7 @@ static void unmap_region(struct mm_struct *mm,
 {
 	struct vm_area_struct *next = vma_next(mm, prev);
 	struct mmu_gather tlb;
+	struct vm_area_struct *cur_vma;
 
 	lru_add_drain();
 	tlb_gather_mmu(&tlb, mm, start, end);
@@ -2678,8 +2679,12 @@ static void unmap_region(struct mm_struct *mm,
 	 * concurrent flush in this region has to be coming through the rmap,
 	 * and we synchronize against that using the rmap lock.
 	 */
-	if ((vma->vm_flags & (VM_PFNMAP|VM_MIXEDMAP)) != 0)
-		tlb_flush_mmu(&tlb);
+	for (cur_vma = vma; cur_vma; cur_vma = cur_vma->vm_next) {
+		if ((cur_vma->vm_flags & (VM_PFNMAP|VM_MIXEDMAP)) != 0) {
+			tlb_flush_mmu(&tlb);
+			break;
+		}
+	}
 
 	free_pgtables(&tlb, vma, prev ? prev->vm_end : FIRST_USER_ADDRESS,
 				 next ? next->vm_start : USER_PGTABLES_CEILING);
-- 
2.35.3

