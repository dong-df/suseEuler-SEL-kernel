Git-commit: 9203dfb3ed6b3ab07bc6784c55ba7bc3f8b3d7b9
Message-Id: <9203dfb3ed6b3ab07bc6784c55ba7bc3f8b3d7b9.1657261911.git.geliang.tang@suse.com>
In-Reply-To: <03b9e016598f6f7f6676d4e1c927e11a1863aeae.1657261911.git.geliang.tang@suse.com>
References: <03b9e016598f6f7f6676d4e1c927e11a1863aeae.1657261911.git.geliang.tang@suse.com>
From: "Darrick J. Wong" <djwong@kernel.org>
Date: Sun, 3 Jul 2022 08:04:56 +0300
Subject: [PATCH] xfs: fix xfs_reflink_unshare usage of
 filemap_write_and_wait_range
References: bsn#19
Patch-mainline: v5.10.129

commit d4f74e162d238ce00a640af5f0611c3f51dad70e upstream.

The final parameter of filemap_write_and_wait_range is the end of the
range to flush, not the length of the range to flush.

Fixes: 46afb0628b86 ("xfs: only flush the unshared range in xfs_reflink_unshare")
Signed-off-by: Darrick J. Wong <djwong@kernel.org>
Reviewed-by: Chandan Babu R <chandanrlinux@gmail.com>
Reviewed-by: Brian Foster <bfoster@redhat.com>
Signed-off-by: Amir Goldstein <amir73il@gmail.com>
Acked-by: Darrick J. Wong <djwong@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Geliang Tang <geliang.tang@suse.com>
---
 fs/xfs/xfs_reflink.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/fs/xfs/xfs_reflink.c b/fs/xfs/xfs_reflink.c
index 6fa05fb78189..aa46b75d75af 100644
--- a/fs/xfs/xfs_reflink.c
+++ b/fs/xfs/xfs_reflink.c
@@ -1503,7 +1503,8 @@ xfs_reflink_unshare(
 	if (error)
 		goto out;
 
-	error = filemap_write_and_wait_range(inode->i_mapping, offset, len);
+	error = filemap_write_and_wait_range(inode->i_mapping, offset,
+			offset + len - 1);
 	if (error)
 		goto out;
 
-- 
2.34.1

