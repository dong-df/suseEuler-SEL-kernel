Patch category
==============

For SEL kernel, we have below categories to put patch file:

1. patches.stable

Patches we backported from stable tree.

2. patches.mainline

Patches that openEuler backported from mainline tree.

3. patches.suse

Patches we backported for our features, fixes. Could be from mainline
or subsystem tree.

4. patches.euleros

Patches extracted from openEuler tree that has the "euleros inclusion"
or "euler inclusion" tag. We specifically separate such patches out as
they might be come from Huawei EulerOS.

5. patches.openEuler

Patches from openEuler which don't belong to any of above. For such
patches, we include a "openEuler-inclusion:" header that indicates the
original inclusion information in the openEuler commit message.


Patch header policy
===================

Besides what's been described in the README file, we have below
additional policy.

1. Patch that doesn't come from any well-known upstream

If the patch doesn't come from any well-known upstream such as
mainline, openEuler or a maintainer's tree, but rather from some local
edit (for example, a local fix to a compile issue), please make sure
the "From <commit ID>" line that generated by `git format-patch` gets
removed.

In other words, if the patch is from some well-known upstream, it MUST
have a commit ID (and a Git-repo header if necessary). But if it's from
a local temporary git branch, it MUST NOT have a commit ID to avoid
confusion, as there will be no valid upstream to find such ID.

2. The openEuler-commit header

For patches that we port from the openEuler kernel, this header must be
included to indicate the original commit ID in the openEuler tree.

Example:

  openEuler-commit: 91df43cef91e6970143f963b071a6494e4a0ed73

This header is mandatory if the patch is ported from the openEuler tree.

3. The Modified-by-SEL header

This header is mandatory for all patches except those under the
patches.stable dir.

The value of this header can be set to:

  * No
    This indicates that the original commit is taken without any
    modification. This cannot be omitted as the pre-commit check script
    can't tell whether missing of this header is a careless mistake or
    actually no modification was done.

  * Yes, <reason>
    This means the original commit is modified for the <reason>. The
    reason must be provided.
    Example:
      Yes, refreshed due to context changes
      Yes, modified as we do not port dependency mainline commit XXXX
      Yes, dropped a chunk as SEL doesn't have that part of code
      Yes, modified according to openEuler commit xxxx
      Yes, modified according to SLE commit xxxx

