From 79d9707542b1c3a637aa441a411ad59a0b155f18 Mon Sep 17 00:00:00 2001
From: eillon <yezhenyu2@huawei.com>
Date: Tue, 22 Mar 2022 19:48:58 +0800
Subject: [PATCH] kabi: only reserve flags on X86_64 and ARM64
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: 79d9707542b1c3a637aa441a411ad59a0b155f18
Modified-by-SEL: No


euleros inclusion
category: bugfix
bugzilla: https://gitee.com/openeuler/kernel/issues/I4YW86

--------------------------------

When building with defconfig on arm32, we got a compile error:
./include/linux/page-flags-layout.h:95:2: error: #error "Not enough bits in page flags"
   95 | #error "Not enough bits in page flags"
      |  ^~~~~

Limit PG_reserve_pgflag_0 and PG_reserve_pgflag_1 to compile only on
X86_64 and ARM64 to resolve this issue.

Fixes: afdf2a6cdee7 ("kabi: Add reserved page and gfp flags for future extension")
Signed-off-by: eillon <yezhenyu2@huawei.com>
Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 include/linux/page-flags.h     |  2 ++
 include/trace/events/mmflags.h | 10 +++++++---
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/include/linux/page-flags.h b/include/linux/page-flags.h
index e1af0a6c8165..65e1cbe1d1ce 100644
--- a/include/linux/page-flags.h
+++ b/include/linux/page-flags.h
@@ -150,8 +150,10 @@ enum pageflags {
 	 * flags which backported from kernel upstream, please place them
 	 * behind the reserved page flags.
 	 */
+#if defined(CONFIG_X86_64) || defined(CONFIG_ARM64)
 	PG_reserve_pgflag_0,
 	PG_reserve_pgflag_1,
+#endif
 
 	__NR_PAGEFLAGS,
 
diff --git a/include/trace/events/mmflags.h b/include/trace/events/mmflags.h
index b50012bea1ef..366d972ce735 100644
--- a/include/trace/events/mmflags.h
+++ b/include/trace/events/mmflags.h
@@ -89,8 +89,12 @@
 
 #if defined(CONFIG_X86_64) || defined(CONFIG_ARM64)
 #define IF_HAVE_PG_POOL(flag,string) ,{1UL << flag, string}
+#define IF_HAVE_PG_RESERVE0(flag,string) ,{1UL << flag, string}
+#define IF_HAVE_PG_RESERVE1(flag,string) ,{1UL << flag, string}
 #else
 #define IF_HAVE_PG_POOL(flag,string)
+#define IF_HAVE_PG_RESERVE0(flag,string)
+#define IF_HAVE_PG_RESERVE1(flag,string)
 #endif
 
 #ifdef CONFIG_PIN_MEMORY
@@ -128,9 +132,9 @@ IF_HAVE_PG_IDLE(PG_young,		"young"		)		\
 IF_HAVE_PG_IDLE(PG_idle,		"idle"		)		\
 IF_HAVE_PG_ARCH_2(PG_arch_2,		"arch_2"	)		\
 IF_HAVE_PG_POOL(PG_pool,		"pool"		)		\
-IF_HAVE_PG_HOTREPLACE(PG_hotreplace,	"hotreplace"	),		\
-	{1UL << PG_reserve_pgflag_0,	"reserve_pgflag_0"},		\
-	{1UL << PG_reserve_pgflag_1,	"reserve_pgflag_1"}
+IF_HAVE_PG_HOTREPLACE(PG_hotreplace,	"hotreplace"	)		\
+IF_HAVE_PG_RESERVE0(PG_reserve_pgflag_0,"reserve_pgflag_0")		\
+IF_HAVE_PG_RESERVE1(PG_reserve_pgflag_1,"reserve_pgflag_1")
 
 #define show_page_flags(flags)						\
 	(flags) ? __print_flags(flags, "|",				\
-- 
2.26.2

