From a719240e7905ebd2cd8ae3469390b2b60a6cec84 Mon Sep 17 00:00:00 2001
From: liubo <liubo254@huawei.com>
Date: Tue, 20 Sep 2022 21:10:49 +0800
Subject: [PATCH] etmem: add CONFIG_ETMEM macro definition for etmem feature
Patch-mainline: Not yet, from openEuler
References: bsn#22
openEuler-commit: a719240e7905ebd2cd8ae3469390b2b60a6cec84
Modified-by-SEL: No


euleros inclusion
category: feature
eature: etmem
bugzilla: https://gitee.com/openeuler/kernel/issues/I5DC4A

-------------------------------------------------
add CONFIG_ETMEM macro definition for etmem feature.

Signed-off-by: liubo <liubo254@huawei.com>
Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Guoqing Jiang <guoqing.jiang@suse.com>
---
 fs/proc/base.c       | 4 ++++
 fs/proc/internal.h   | 2 ++
 fs/proc/task_mmu.c   | 2 ++
 include/linux/swap.h | 2 ++
 mm/vmscan.c          | 2 ++
 5 files changed, 12 insertions(+)

diff --git a/fs/proc/base.c b/fs/proc/base.c
index b9052be86e8d..9b4666e757f0 100644
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -3338,6 +3338,8 @@ static const struct pid_entry tgid_base_stuff[] = {
 	REG("smaps",      S_IRUGO, proc_pid_smaps_operations),
 	REG("smaps_rollup", S_IRUGO, proc_pid_smaps_rollup_operations),
 	REG("pagemap",    S_IRUSR, proc_pagemap_operations),
+#endif
+#ifdef CONFIG_ETMEM
 	REG("idle_pages", S_IRUSR|S_IWUSR, proc_mm_idle_operations),
 	REG("swap_pages", S_IWUSR, proc_mm_swap_operations),
 #endif
@@ -3689,6 +3691,8 @@ static const struct pid_entry tid_base_stuff[] = {
 	REG("smaps",     S_IRUGO, proc_pid_smaps_operations),
 	REG("smaps_rollup", S_IRUGO, proc_pid_smaps_rollup_operations),
 	REG("pagemap",    S_IRUSR, proc_pagemap_operations),
+#endif
+#ifdef CONFIG_ETMEM
 	REG("idle_pages", S_IRUSR|S_IWUSR, proc_mm_idle_operations),
 	REG("swap_pages", S_IWUSR, proc_mm_swap_operations),
 #endif
diff --git a/fs/proc/internal.h b/fs/proc/internal.h
index d1fdb722f0ca..104945bbeb9f 100644
--- a/fs/proc/internal.h
+++ b/fs/proc/internal.h
@@ -304,8 +304,10 @@ extern const struct file_operations proc_pid_smaps_operations;
 extern const struct file_operations proc_pid_smaps_rollup_operations;
 extern const struct file_operations proc_clear_refs_operations;
 extern const struct file_operations proc_pagemap_operations;
+#ifdef CONFIG_ETMEM
 extern const struct file_operations proc_mm_idle_operations;
 extern const struct file_operations proc_mm_swap_operations;
+#endif
 
 extern unsigned long task_vsize(struct mm_struct *);
 extern unsigned long task_statm(struct mm_struct *,
diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c
index 7b8a513d9f69..aee74a4074d4 100644
--- a/fs/proc/task_mmu.c
+++ b/fs/proc/task_mmu.c
@@ -1855,6 +1855,7 @@ const struct file_operations proc_pagemap_operations = {
 	.release	= pagemap_release,
 };
 
+#ifdef CONFIG_ETMEM
 static DEFINE_SPINLOCK(scan_lock);
 
 static int page_scan_lock(struct file *file, int is_lock, struct file_lock *flock)
@@ -2037,6 +2038,7 @@ const struct file_operations proc_mm_swap_operations = {
 	.open       = mm_swap_open,
 	.release    = mm_swap_release,
 };
+#endif
 #endif /* CONFIG_PROC_PAGE_MONITOR */
 
 #ifdef CONFIG_NUMA
diff --git a/include/linux/swap.h b/include/linux/swap.h
index f2aa72ec0e57..adb294970605 100644
--- a/include/linux/swap.h
+++ b/include/linux/swap.h
@@ -383,9 +383,11 @@ extern int vm_swappiness;
 extern int remove_mapping(struct address_space *mapping, struct page *page);
 
 extern unsigned long reclaim_pages(struct list_head *page_list);
+#ifdef CONFIG_ETMEM
 extern int add_page_for_swap(struct page *page, struct list_head *pagelist);
 extern struct page *get_page_from_vaddr(struct mm_struct *mm,
 					unsigned long vaddr);
+#endif
 #ifdef CONFIG_NUMA
 extern int node_reclaim_mode;
 extern int sysctl_min_unmapped_ratio;
diff --git a/mm/vmscan.c b/mm/vmscan.c
index c504e530287b..a8f7804d15d2 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -4582,6 +4582,7 @@ void check_move_unevictable_pages(struct pagevec *pvec)
 }
 EXPORT_SYMBOL_GPL(check_move_unevictable_pages);
 
+#ifdef CONFIG_ETMEM
 int add_page_for_swap(struct page *page, struct list_head *pagelist)
 {
 	int err = -EBUSY;
@@ -4636,3 +4637,4 @@ struct page *get_page_from_vaddr(struct mm_struct *mm, unsigned long vaddr)
 	return page;
 }
 EXPORT_SYMBOL_GPL(get_page_from_vaddr);
+#endif
-- 
2.34.1

